{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaud\\\\radha-counter\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\AgendaList\\\\agendaList.js\";\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport map from 'lodash/map';\nimport isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport XDate from 'xdate';\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef } from 'react';\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { useDidUpdate, useCombinedRefs } from '../../hooks';\nimport { getMoment } from '../../momentResolver';\nimport { isToday, isGTE, sameDate } from '../../dateutils';\nimport { parseDate } from '../../interface';\nimport { getDefaultLocale } from '../../services';\nimport { UpdateSources, todayString } from '../commons';\nimport constants from '../../commons/constants';\nimport styleConstructor from '../style';\nimport Context from '../Context';\nimport InfiniteAgendaList from './infiniteAgendaList';\nimport { AgendaSectionHeader } from './commons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst viewabilityConfig = {\n  itemVisiblePercentThreshold: 20\n};\nconst AgendaList = forwardRef((props, ref) => {\n  const {\n    theme,\n    sections,\n    scrollToNextEvent,\n    viewOffset = 0,\n    avoidDateUpdates,\n    onScroll,\n    onMomentumScrollBegin,\n    onMomentumScrollEnd,\n    onScrollToIndexFailed,\n    renderSectionHeader,\n    sectionStyle,\n    keyExtractor,\n    dayFormatter,\n    dayFormat = 'dddd, MMM d',\n    useMoment,\n    markToday = true,\n    onViewableItemsChanged\n  } = props;\n  const {\n    date,\n    updateSource,\n    setDate,\n    setDisabled\n  } = useContext(Context);\n  const style = useRef(styleConstructor(theme));\n  const list = useCombinedRefs(ref);\n  const _topSection = useRef(sections[0]?.title);\n  const didScroll = useRef(false);\n  const sectionScroll = useRef(false);\n  const sectionHeight = useRef(0);\n  useEffect(() => {\n    if (date !== _topSection.current) {\n      setTimeout(() => {\n        scrollToSection(date);\n      }, 500);\n    }\n  }, []);\n  useDidUpdate(() => {\n    if (updateSource !== UpdateSources.LIST_DRAG && updateSource !== UpdateSources.CALENDAR_INIT) {\n      scrollToSection(date);\n    }\n  }, [date]);\n  const getSectionIndex = date => {\n    let i;\n    map(sections, (section, index) => {\n      if (section.title === date) {\n        i = index;\n      }\n    });\n    return i;\n  };\n  const getNextSectionIndex = date => {\n    let i = 0;\n    for (let j = 1; j < sections.length; j++) {\n      const prev = parseDate(sections[j - 1]?.title);\n      const next = parseDate(sections[j]?.title);\n      const cur = new XDate(date);\n      if (isGTE(cur, prev) && isGTE(next, cur)) {\n        i = sameDate(prev, cur) ? j - 1 : j;\n        break;\n      } else if (isGTE(cur, next)) {\n        i = j;\n      }\n    }\n    return i;\n  };\n  const getSectionTitle = useCallback(title => {\n    if (!title) return;\n    let sectionTitle = title;\n    if (dayFormatter) {\n      sectionTitle = dayFormatter(title);\n    } else if (dayFormat) {\n      if (useMoment) {\n        const moment = getMoment();\n        sectionTitle = moment(title).format(dayFormat);\n      } else {\n        sectionTitle = new XDate(title).toString(dayFormat);\n      }\n    }\n    if (markToday) {\n      const string = getDefaultLocale().today || todayString;\n      const today = isToday(title);\n      sectionTitle = today ? `${string}, ${sectionTitle}` : sectionTitle;\n    }\n    return sectionTitle;\n  }, []);\n  const scrollToSection = useCallback(debounce(d => {\n    const sectionIndex = scrollToNextEvent ? getNextSectionIndex(d) : getSectionIndex(d);\n    if (isUndefined(sectionIndex)) {\n      return;\n    }\n    if (list?.current && sectionIndex !== undefined) {\n      sectionScroll.current = true;\n      _topSection.current = sections[sectionIndex]?.title;\n      list?.current.scrollToLocation({\n        animated: true,\n        sectionIndex: sectionIndex,\n        itemIndex: 1,\n        viewPosition: 0,\n        viewOffset: (constants.isAndroid ? sectionHeight.current : 0) + viewOffset\n      });\n    }\n  }, 1000, {\n    leading: true,\n    trailing: true\n  }), [viewOffset, sections]);\n  const _onViewableItemsChanged = useCallback(info => {\n    if (info?.viewableItems && !sectionScroll.current) {\n      const topSection = get(info?.viewableItems[0], 'section.title');\n      if (topSection && topSection !== _topSection.current) {\n        _topSection.current = topSection;\n        if (didScroll.current && !avoidDateUpdates) {\n          setDate?.(_topSection.current, UpdateSources.LIST_DRAG);\n        }\n      }\n    }\n    onViewableItemsChanged?.(info);\n  }, [avoidDateUpdates, setDate, onViewableItemsChanged]);\n  const _onScroll = useCallback(event => {\n    if (!didScroll.current) {\n      didScroll.current = true;\n      scrollToSection.cancel();\n    }\n    onScroll?.(event);\n  }, [onScroll]);\n  const _onMomentumScrollBegin = useCallback(event => {\n    setDisabled?.(true);\n    onMomentumScrollBegin?.(event);\n  }, [onMomentumScrollBegin, setDisabled]);\n  const _onMomentumScrollEnd = useCallback(event => {\n    sectionScroll.current = false;\n    setDisabled?.(false);\n    onMomentumScrollEnd?.(event);\n  }, [onMomentumScrollEnd, setDisabled]);\n  const headerTextStyle = useMemo(() => [style.current.sectionText, sectionStyle], [sectionStyle]);\n  const _onScrollToIndexFailed = useCallback(info => {\n    if (onScrollToIndexFailed) {\n      onScrollToIndexFailed(info);\n    } else {\n      console.log('onScrollToIndexFailed info: ', info);\n    }\n  }, [onScrollToIndexFailed]);\n  const onHeaderLayout = useCallback(event => {\n    sectionHeight.current = event.nativeEvent.layout.height;\n  }, []);\n  const _renderSectionHeader = useCallback(info => {\n    const title = info?.section?.title;\n    if (renderSectionHeader) {\n      return renderSectionHeader(title);\n    }\n    const headerTitle = getSectionTitle(title);\n    return _jsxDEV(AgendaSectionHeader, {\n      title: headerTitle,\n      style: headerTextStyle,\n      onLayout: onHeaderLayout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 16\n    }, this);\n  }, [headerTextStyle]);\n  const _keyExtractor = useCallback((item, index) => {\n    return isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n  }, [keyExtractor]);\n  if (props.infiniteListProps) {\n    return _jsxDEV(InfiniteAgendaList, Object.assign({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 16\n    }, this);\n  }\n  return _jsxDEV(SectionList, Object.assign({\n    stickySectionHeadersEnabled: true\n  }, props, {\n    ref: list,\n    keyExtractor: _keyExtractor,\n    showsVerticalScrollIndicator: false,\n    onViewableItemsChanged: _onViewableItemsChanged,\n    viewabilityConfig: viewabilityConfig,\n    renderSectionHeader: _renderSectionHeader,\n    onScroll: _onScroll,\n    onMomentumScrollBegin: _onMomentumScrollBegin,\n    onMomentumScrollEnd: _onMomentumScrollEnd,\n    onScrollToIndexFailed: _onScrollToIndexFailed\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 13\n  }, this);\n});\nexport default AgendaList;\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = {\n  dayFormat: PropTypes.string,\n  dayFormatter: PropTypes.func,\n  useMoment: PropTypes.bool,\n  markToday: PropTypes.bool,\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  avoidDateUpdates: PropTypes.bool\n};","map":{"version":3,"names":["PropTypes","get","map","isFunction","isUndefined","debounce","XDate","React","forwardRef","useCallback","useContext","useEffect","useMemo","useRef","SectionList","useDidUpdate","useCombinedRefs","getMoment","isToday","isGTE","sameDate","parseDate","getDefaultLocale","UpdateSources","todayString","constants","styleConstructor","Context","InfiniteAgendaList","AgendaSectionHeader","jsxDEV","_jsxDEV","viewabilityConfig","itemVisiblePercentThreshold","AgendaList","props","ref","theme","sections","scrollToNextEvent","viewOffset","avoidDateUpdates","onScroll","onMomentumScrollBegin","onMomentumScrollEnd","onScrollToIndexFailed","renderSectionHeader","sectionStyle","keyExtractor","dayFormatter","dayFormat","useMoment","markToday","onViewableItemsChanged","date","updateSource","setDate","setDisabled","style","list","_topSection","title","didScroll","sectionScroll","sectionHeight","current","setTimeout","scrollToSection","LIST_DRAG","CALENDAR_INIT","getSectionIndex","i","section","index","getNextSectionIndex","j","length","prev","next","cur","getSectionTitle","sectionTitle","moment","format","toString","string","today","d","sectionIndex","undefined","scrollToLocation","animated","itemIndex","viewPosition","isAndroid","leading","trailing","_onViewableItemsChanged","info","viewableItems","topSection","_onScroll","event","cancel","_onMomentumScrollBegin","_onMomentumScrollEnd","headerTextStyle","sectionText","_onScrollToIndexFailed","console","log","onHeaderLayout","nativeEvent","layout","height","_renderSectionHeader","headerTitle","onLayout","fileName","_jsxFileName","lineNumber","columnNumber","_keyExtractor","item","String","infiniteListProps","Object","assign","stickySectionHeadersEnabled","showsVerticalScrollIndicator","displayName","propTypes","func","bool","oneOfType","object","number","array"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-calendars/src/expandableCalendar/AgendaList/agendaList.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport map from 'lodash/map';\nimport isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport XDate from 'xdate';\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef } from 'react';\nimport { SectionList } from 'react-native';\nimport { useDidUpdate, useCombinedRefs } from '../../hooks';\nimport { getMoment } from '../../momentResolver';\nimport { isToday, isGTE, sameDate } from '../../dateutils';\nimport { parseDate } from '../../interface';\nimport { getDefaultLocale } from '../../services';\nimport { UpdateSources, todayString } from '../commons';\nimport constants from '../../commons/constants';\nimport styleConstructor from '../style';\nimport Context from '../Context';\nimport InfiniteAgendaList from './infiniteAgendaList';\nimport { AgendaSectionHeader } from './commons';\nconst viewabilityConfig = {\n    itemVisiblePercentThreshold: 20 // 50 means if 50% of the item is visible\n};\n/**\n * @description: AgendaList component\n * @note: Should be wrapped with 'CalendarProvider'\n * @extends: SectionList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nconst AgendaList = forwardRef((props, ref) => {\n    const { theme, sections, scrollToNextEvent, viewOffset = 0, avoidDateUpdates, onScroll, onMomentumScrollBegin, onMomentumScrollEnd, onScrollToIndexFailed, renderSectionHeader, sectionStyle, keyExtractor, dayFormatter, dayFormat = 'dddd, MMM d', useMoment, markToday = true, onViewableItemsChanged } = props;\n    const { date, updateSource, setDate, setDisabled } = useContext(Context);\n    const style = useRef(styleConstructor(theme));\n    const list = useCombinedRefs(ref);\n    const _topSection = useRef(sections[0]?.title);\n    const didScroll = useRef(false);\n    const sectionScroll = useRef(false);\n    const sectionHeight = useRef(0);\n    useEffect(() => {\n        if (date !== _topSection.current) {\n            setTimeout(() => {\n                scrollToSection(date);\n            }, 500);\n        }\n    }, []);\n    useDidUpdate(() => {\n        // NOTE: on first init data should set first section to the current date!!!\n        if (updateSource !== UpdateSources.LIST_DRAG && updateSource !== UpdateSources.CALENDAR_INIT) {\n            scrollToSection(date);\n        }\n    }, [date]);\n    const getSectionIndex = (date) => {\n        let i;\n        map(sections, (section, index) => {\n            // NOTE: sections titles should match current date format!!!\n            if (section.title === date) {\n                i = index;\n            }\n        });\n        return i;\n    };\n    const getNextSectionIndex = (date) => {\n        let i = 0;\n        for (let j = 1; j < sections.length; j++) {\n            const prev = parseDate(sections[j - 1]?.title);\n            const next = parseDate(sections[j]?.title);\n            const cur = new XDate(date);\n            if (isGTE(cur, prev) && isGTE(next, cur)) {\n                i = sameDate(prev, cur) ? j - 1 : j;\n                break;\n            }\n            else if (isGTE(cur, next)) {\n                i = j;\n            }\n        }\n        return i;\n    };\n    const getSectionTitle = useCallback((title) => {\n        if (!title)\n            return;\n        let sectionTitle = title;\n        if (dayFormatter) {\n            sectionTitle = dayFormatter(title);\n        }\n        else if (dayFormat) {\n            if (useMoment) {\n                const moment = getMoment();\n                sectionTitle = moment(title).format(dayFormat);\n            }\n            else {\n                sectionTitle = new XDate(title).toString(dayFormat);\n            }\n        }\n        if (markToday) {\n            const string = getDefaultLocale().today || todayString;\n            const today = isToday(title);\n            sectionTitle = today ? `${string}, ${sectionTitle}` : sectionTitle;\n        }\n        return sectionTitle;\n    }, []);\n    const scrollToSection = useCallback(debounce((d) => {\n        const sectionIndex = scrollToNextEvent ? getNextSectionIndex(d) : getSectionIndex(d);\n        if (isUndefined(sectionIndex)) {\n            return;\n        }\n        if (list?.current && sectionIndex !== undefined) {\n            sectionScroll.current = true; // to avoid setDate() in onViewableItemsChanged\n            _topSection.current = sections[sectionIndex]?.title;\n            // @ts-expect-error should be fixed when we fix the typings of the ref.\n            list?.current.scrollToLocation({\n                animated: true,\n                sectionIndex: sectionIndex,\n                itemIndex: 1,\n                viewPosition: 0,\n                viewOffset: (constants.isAndroid ? sectionHeight.current : 0) + viewOffset\n            });\n        }\n    }, 1000, { leading: true, trailing: true }), [viewOffset, sections]);\n    const _onViewableItemsChanged = useCallback((info) => {\n        if (info?.viewableItems && !sectionScroll.current) {\n            const topSection = get(info?.viewableItems[0], 'section.title');\n            if (topSection && topSection !== _topSection.current) {\n                _topSection.current = topSection;\n                if (didScroll.current && !avoidDateUpdates) {\n                    // to avoid setDate() on first load (while setting the initial context.date value)\n                    setDate?.(_topSection.current, UpdateSources.LIST_DRAG);\n                }\n            }\n        }\n        onViewableItemsChanged?.(info);\n    }, [avoidDateUpdates, setDate, onViewableItemsChanged]);\n    const _onScroll = useCallback((event) => {\n        if (!didScroll.current) {\n            didScroll.current = true;\n            scrollToSection.cancel();\n        }\n        onScroll?.(event);\n    }, [onScroll]);\n    const _onMomentumScrollBegin = useCallback((event) => {\n        setDisabled?.(true);\n        onMomentumScrollBegin?.(event);\n    }, [onMomentumScrollBegin, setDisabled]);\n    const _onMomentumScrollEnd = useCallback((event) => {\n        // when list momentum ends AND when scrollToSection scroll ends\n        sectionScroll.current = false;\n        setDisabled?.(false);\n        onMomentumScrollEnd?.(event);\n    }, [onMomentumScrollEnd, setDisabled]);\n    const headerTextStyle = useMemo(() => [style.current.sectionText, sectionStyle], [sectionStyle]);\n    const _onScrollToIndexFailed = useCallback((info) => {\n        if (onScrollToIndexFailed) {\n            onScrollToIndexFailed(info);\n        }\n        else {\n            console.log('onScrollToIndexFailed info: ', info);\n        }\n    }, [onScrollToIndexFailed]);\n    const onHeaderLayout = useCallback((event) => {\n        sectionHeight.current = event.nativeEvent.layout.height;\n    }, []);\n    const _renderSectionHeader = useCallback((info) => {\n        const title = info?.section?.title;\n        if (renderSectionHeader) {\n            return renderSectionHeader(title);\n        }\n        const headerTitle = getSectionTitle(title);\n        return <AgendaSectionHeader title={headerTitle} style={headerTextStyle} onLayout={onHeaderLayout}/>;\n    }, [headerTextStyle]);\n    const _keyExtractor = useCallback((item, index) => {\n        return isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n    }, [keyExtractor]);\n    if (props.infiniteListProps) {\n        return <InfiniteAgendaList {...props}/>;\n    }\n    return (<SectionList stickySectionHeadersEnabled {...props} \n    // @ts-expect-error\n    ref={list} keyExtractor={_keyExtractor} showsVerticalScrollIndicator={false} onViewableItemsChanged={_onViewableItemsChanged} viewabilityConfig={viewabilityConfig} renderSectionHeader={_renderSectionHeader} onScroll={_onScroll} onMomentumScrollBegin={_onMomentumScrollBegin} onMomentumScrollEnd={_onMomentumScrollEnd} onScrollToIndexFailed={_onScrollToIndexFailed}/>);\n    // _getItemLayout = (data, index) => {\n    //   return {length: constants.screenWidth, offset: constants.screenWidth * index, index};\n    // }\n});\nexport default AgendaList;\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = {\n    dayFormat: PropTypes.string,\n    dayFormatter: PropTypes.func,\n    useMoment: PropTypes.bool,\n    markToday: PropTypes.bool,\n    // @ts-expect-error TODO Figure out why forwardRef causes error about the number type\n    sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    avoidDateUpdates: PropTypes.bool\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}