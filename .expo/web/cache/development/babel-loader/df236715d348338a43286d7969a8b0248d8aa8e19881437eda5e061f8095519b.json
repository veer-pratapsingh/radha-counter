{"ast":null,"code":"export class CodedError extends Error {\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n  }\n}","map":{"version":3,"names":["CodedError","Error","constructor","code","message"],"sources":["C:/Users/chaud/radha-counter/node_modules/expo-modules-core/src/errors/CodedError.ts"],"sourcesContent":["/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n"],"mappings":"AAKA,OAAO,MAAMA,UAAU,SAASC,KAAK,CAAC;EAIpCC,WAAWA,CAACC,IAAY,EAAEC,OAAe,EAAE;IACzC,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACD,IAAI,GAAGA,IAAI;EAClB;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}