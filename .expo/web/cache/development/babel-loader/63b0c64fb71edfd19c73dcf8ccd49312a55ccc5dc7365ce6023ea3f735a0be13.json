{"ast":null,"code":"import range from 'lodash/range';\nimport times from 'lodash/times';\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport constants from '../commons/constants';\nimport { buildTimeString, calcTimeByPosition, calcDateByPosition } from './helpers/presenter';\nimport { buildUnavailableHoursBlocks, HOUR_BLOCK_HEIGHT } from './Packer';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nconst dimensionWidth = constants.screenWidth;\nconst EVENT_DIFF = 20;\nconst TimelineHours = props => {\n  const {\n    format24h,\n    start = 0,\n    end = 24,\n    date,\n    unavailableHours,\n    unavailableHoursColor,\n    styles,\n    onBackgroundLongPress,\n    onBackgroundLongPressOut,\n    width,\n    numberOfDays = 1,\n    timelineLeftInset = 0,\n    testID\n  } = props;\n  const lastLongPressEventTime = useRef();\n  const offset = HOUR_BLOCK_HEIGHT;\n  const unavailableHoursBlocks = buildUnavailableHoursBlocks(unavailableHours, {\n    dayStart: start,\n    dayEnd: end\n  });\n  const hours = useMemo(() => {\n    return range(start, end + 1).map(i => {\n      let timeText;\n      if (i === start) {\n        timeText = '';\n      } else if (i < 12) {\n        timeText = !format24h ? `${i} AM` : `${i}:00`;\n      } else if (i === 12) {\n        timeText = !format24h ? `${i} PM` : `${i}:00`;\n      } else if (i === 24) {\n        timeText = !format24h ? '12 AM' : '23:59';\n      } else {\n        timeText = !format24h ? `${i - 12} PM` : `${i}:00`;\n      }\n      return {\n        timeText,\n        time: i\n      };\n    });\n  }, [start, end, format24h]);\n  const handleBackgroundPress = useCallback(event => {\n    const yPosition = event.nativeEvent.locationY;\n    const xPosition = event.nativeEvent.locationX;\n    const {\n      hour,\n      minutes\n    } = calcTimeByPosition(yPosition, HOUR_BLOCK_HEIGHT);\n    const dateByPosition = calcDateByPosition(xPosition, timelineLeftInset, numberOfDays, date);\n    lastLongPressEventTime.current = {\n      hour,\n      minutes,\n      date: dateByPosition\n    };\n    const timeString = buildTimeString(hour, minutes, dateByPosition);\n    onBackgroundLongPress?.(timeString, lastLongPressEventTime.current);\n  }, [onBackgroundLongPress, date]);\n  const handlePressOut = useCallback(() => {\n    if (lastLongPressEventTime.current) {\n      const {\n        hour,\n        minutes,\n        date\n      } = lastLongPressEventTime.current;\n      const timeString = buildTimeString(hour, minutes, date);\n      onBackgroundLongPressOut?.(timeString, lastLongPressEventTime.current);\n      lastLongPressEventTime.current = undefined;\n    }\n  }, [onBackgroundLongPressOut, date]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableWithoutFeedback, {\n      onLongPress: handleBackgroundPress,\n      onPressOut: handlePressOut,\n      children: _jsx(View, {\n        style: StyleSheet.absoluteFillObject\n      })\n    }), unavailableHoursBlocks.map((block, index) => _jsx(View, {\n      style: [styles.unavailableHoursBlock, block, unavailableHoursColor ? {\n        backgroundColor: unavailableHoursColor\n      } : undefined, {\n        left: timelineLeftInset\n      }]\n    }, index)), hours.map(({\n      timeText,\n      time\n    }, index) => {\n      return _jsxs(React.Fragment, {\n        children: [_jsx(Text, {\n          style: [styles.timeLabel, {\n            top: offset * index - 6,\n            width: timelineLeftInset - 16\n          }],\n          children: timeText\n        }, `timeLabel${time}`), time === start ? null : _jsx(View, {\n          testID: `${testID}.${time}.line`,\n          style: [styles.line, {\n            top: offset * index,\n            width: dimensionWidth - EVENT_DIFF,\n            left: timelineLeftInset - 16\n          }]\n        }, `line${time}`), _jsx(View, {\n          testID: `${testID}.${time}.lineHalf`,\n          style: [styles.line, {\n            top: offset * (index + 0.5),\n            width: dimensionWidth - EVENT_DIFF,\n            left: timelineLeftInset - 16\n          }]\n        }, `lineHalf${time}`)]\n      }, time);\n    }), times(numberOfDays, index => _jsx(View, {\n      style: [styles.verticalLine, {\n        right: (index + 1) * width / numberOfDays\n      }]\n    }, index))]\n  });\n};\nexport default React.memo(TimelineHours);","map":{"version":3,"names":["range","times","React","useCallback","useMemo","useRef","View","Text","TouchableWithoutFeedback","StyleSheet","constants","buildTimeString","calcTimeByPosition","calcDateByPosition","buildUnavailableHoursBlocks","HOUR_BLOCK_HEIGHT","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","dimensionWidth","screenWidth","EVENT_DIFF","TimelineHours","props","format24h","start","end","date","unavailableHours","unavailableHoursColor","styles","onBackgroundLongPress","onBackgroundLongPressOut","width","numberOfDays","timelineLeftInset","testID","lastLongPressEventTime","offset","unavailableHoursBlocks","dayStart","dayEnd","hours","map","i","timeText","time","handleBackgroundPress","event","yPosition","nativeEvent","locationY","xPosition","locationX","hour","minutes","dateByPosition","current","timeString","handlePressOut","undefined","children","onLongPress","onPressOut","style","absoluteFillObject","block","index","unavailableHoursBlock","backgroundColor","left","timeLabel","top","line","verticalLine","right","memo"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-calendars/src/timeline/TimelineHours.js"],"sourcesContent":["import range from 'lodash/range';\nimport times from 'lodash/times';\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { View, Text, TouchableWithoutFeedback, StyleSheet } from 'react-native';\nimport constants from '../commons/constants';\nimport { buildTimeString, calcTimeByPosition, calcDateByPosition } from './helpers/presenter';\nimport { buildUnavailableHoursBlocks, HOUR_BLOCK_HEIGHT } from './Packer';\nconst dimensionWidth = constants.screenWidth;\nconst EVENT_DIFF = 20;\nconst TimelineHours = (props) => {\n    const { format24h, start = 0, end = 24, date, unavailableHours, unavailableHoursColor, styles, onBackgroundLongPress, onBackgroundLongPressOut, width, numberOfDays = 1, timelineLeftInset = 0, testID } = props;\n    const lastLongPressEventTime = useRef();\n    // const offset = this.calendarHeight / (end - start);\n    const offset = HOUR_BLOCK_HEIGHT;\n    const unavailableHoursBlocks = buildUnavailableHoursBlocks(unavailableHours, { dayStart: start, dayEnd: end });\n    const hours = useMemo(() => {\n        return range(start, end + 1).map(i => {\n            let timeText;\n            if (i === start) {\n                timeText = '';\n            }\n            else if (i < 12) {\n                timeText = !format24h ? `${i} AM` : `${i}:00`;\n            }\n            else if (i === 12) {\n                timeText = !format24h ? `${i} PM` : `${i}:00`;\n            }\n            else if (i === 24) {\n                timeText = !format24h ? '12 AM' : '23:59';\n            }\n            else {\n                timeText = !format24h ? `${i - 12} PM` : `${i}:00`;\n            }\n            return { timeText, time: i };\n        });\n    }, [start, end, format24h]);\n    const handleBackgroundPress = useCallback(event => {\n        const yPosition = event.nativeEvent.locationY;\n        const xPosition = event.nativeEvent.locationX;\n        const { hour, minutes } = calcTimeByPosition(yPosition, HOUR_BLOCK_HEIGHT);\n        const dateByPosition = calcDateByPosition(xPosition, timelineLeftInset, numberOfDays, date);\n        lastLongPressEventTime.current = { hour, minutes, date: dateByPosition };\n        const timeString = buildTimeString(hour, minutes, dateByPosition);\n        onBackgroundLongPress?.(timeString, lastLongPressEventTime.current);\n    }, [onBackgroundLongPress, date]);\n    const handlePressOut = useCallback(() => {\n        if (lastLongPressEventTime.current) {\n            const { hour, minutes, date } = lastLongPressEventTime.current;\n            const timeString = buildTimeString(hour, minutes, date);\n            onBackgroundLongPressOut?.(timeString, lastLongPressEventTime.current);\n            lastLongPressEventTime.current = undefined;\n        }\n    }, [onBackgroundLongPressOut, date]);\n    return (<>\n      <TouchableWithoutFeedback onLongPress={handleBackgroundPress} onPressOut={handlePressOut}>\n        <View style={StyleSheet.absoluteFillObject}/>\n      </TouchableWithoutFeedback>\n      {unavailableHoursBlocks.map((block, index) => (<View key={index} style={[\n                styles.unavailableHoursBlock,\n                block,\n                unavailableHoursColor ? { backgroundColor: unavailableHoursColor } : undefined,\n                { left: timelineLeftInset }\n            ]}/>))}\n\n      {hours.map(({ timeText, time }, index) => {\n            return (<React.Fragment key={time}>\n            <Text key={`timeLabel${time}`} style={[styles.timeLabel, { top: offset * index - 6, width: timelineLeftInset - 16 }]}>\n              {timeText}\n            </Text>\n            {time === start ? null : (<View key={`line${time}`} testID={`${testID}.${time}.line`} style={[styles.line, { top: offset * index, width: dimensionWidth - EVENT_DIFF, left: timelineLeftInset - 16 }]}/>)}\n            {<View key={`lineHalf${time}`} testID={`${testID}.${time}.lineHalf`} style={[styles.line, { top: offset * (index + 0.5), width: dimensionWidth - EVENT_DIFF, left: timelineLeftInset - 16 }]}/>}\n          </React.Fragment>);\n        })}\n      {times(numberOfDays, (index) => <View key={index} style={[styles.verticalLine, { right: (index + 1) * width / numberOfDays }]}/>)}\n    </>);\n};\nexport default React.memo(TimelineHours);\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}