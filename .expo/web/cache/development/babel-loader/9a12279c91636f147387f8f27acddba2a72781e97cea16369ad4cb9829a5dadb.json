{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaud\\\\radha-counter\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar-list\\\\index.js\";\nimport findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { extractCalendarProps, extractHeaderProps } from '../componentUpdater';\nimport { parseDate, toMarkingFormat, xdateToData } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\nimport constants from '../commons/constants';\nimport { useDidUpdate } from '../hooks';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nimport isEqual from 'lodash/isEqual';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\nconst CalendarList = (props, ref) => {\n  useImperativeHandle(ref, () => ({\n    scrollToDay: (date, offset, animated) => {\n      scrollToDay(date, offset, animated);\n    },\n    scrollToMonth: date => {\n      scrollToMonth(date);\n    }\n  }));\n  const {\n    theme,\n    current,\n    firstDay,\n    markedDates,\n    headerStyle,\n    onMonthChange,\n    onVisibleMonthsChange,\n    pastScrollRange = PAST_SCROLL_RANGE,\n    futureScrollRange = FUTURE_SCROLL_RANGE,\n    calendarHeight = CALENDAR_HEIGHT,\n    calendarWidth = CALENDAR_WIDTH,\n    calendarStyle,\n    animateScroll = false,\n    showScrollIndicator = false,\n    staticHeader,\n    testID,\n    style: propsStyle,\n    onLayout,\n    removeClippedSubviews,\n    horizontal = false,\n    pagingEnabled,\n    scrollEnabled = true,\n    nestedScrollEnabled = true,\n    scrollsToTop = false,\n    keyExtractor = (_, index) => String(index),\n    keyboardShouldPersistTaps,\n    onScrollBeginDrag,\n    onScrollEndDrag,\n    onMomentumScrollBegin,\n    onMomentumScrollEnd,\n    contentContainerStyle,\n    onEndReachedThreshold,\n    onEndReached,\n    onHeaderLayout,\n    accessibilityElementsHidden,\n    importantForAccessibility\n  } = props;\n  const calendarProps = extractCalendarProps(props);\n  const headerProps = extractHeaderProps(props);\n  const calendarSize = horizontal ? calendarWidth : calendarHeight;\n  const shouldUseStaticHeader = staticHeader && horizontal;\n  const [currentMonth, setCurrentMonth] = useState(parseDate(current));\n  const shouldFixRTL = useMemo(() => !constants.isRN73() && constants.isAndroidRTL && horizontal, [horizontal]);\n  const shouldMeasureHeader = useRef(true);\n  const style = useRef(styleConstructor(theme));\n  const list = useRef();\n  const range = useRef(horizontal ? 1 : 3);\n  const initialDate = useRef(parseDate(current) || new XDate());\n  const visibleMonth = useRef(currentMonth);\n  const items = useMemo(() => {\n    const months = [];\n    for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n      const rangeDate = initialDate.current?.clone().addMonths(i - pastScrollRange, true);\n      months.push(rangeDate);\n    }\n    return months;\n  }, [pastScrollRange, futureScrollRange]);\n  const staticHeaderStyle = useMemo(() => {\n    return [style.current.staticHeader, headerStyle];\n  }, [headerStyle]);\n  const listStyle = useMemo(() => {\n    return [style.current.container, propsStyle];\n  }, [propsStyle]);\n  const initialDateIndex = useMemo(() => {\n    return findIndex(items, function (item) {\n      return item.toString() === initialDate.current?.toString();\n    });\n  }, [items]);\n  const getDateIndex = useCallback(date => {\n    return findIndex(items, function (item) {\n      return item.toString() === date.toString();\n    });\n  }, [items]);\n  useEffect(() => {\n    if (current) {\n      scrollToMonth(new XDate(current));\n    }\n  }, [current]);\n  useDidUpdate(() => {\n    const currMont = currentMonth?.clone();\n    if (currMont) {\n      const data = xdateToData(currMont);\n      onMonthChange?.(data);\n      onVisibleMonthsChange?.([data]);\n      AccessibilityInfo.announceForAccessibility(currMont.toString('MMMM yyyy'));\n    }\n  }, [currentMonth]);\n  const scrollToDay = (date, offset, animated) => {\n    const scrollTo = parseDate(date);\n    const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n    let scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n    if (!horizontal) {\n      let week = 0;\n      const days = page(scrollTo, firstDay);\n      for (let i = 0; i < days.length; i++) {\n        week = Math.floor(i / 7);\n        if (sameDate(days[i], scrollTo)) {\n          scrollAmount += 46 * week;\n          break;\n        }\n      }\n    }\n    if (scrollAmount !== 0) {\n      list?.current?.scrollToOffset({\n        offset: scrollAmount,\n        animated\n      });\n    }\n  };\n  const scrollToMonth = useCallback(date => {\n    const scrollTo = parseDate(date);\n    const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n    const scrollAmount = calendarSize * (shouldFixRTL ? pastScrollRange - diffMonths : pastScrollRange + diffMonths);\n    if (scrollAmount !== 0) {\n      list?.current?.scrollToOffset({\n        offset: scrollAmount,\n        animated: animateScroll\n      });\n    }\n  }, [calendarSize, shouldFixRTL, pastScrollRange, animateScroll]);\n  const addMonth = useCallback(count => {\n    const day = currentMonth?.clone().addMonths(count, true);\n    if (sameMonth(day, currentMonth) || getDateIndex(day) === -1) {\n      return;\n    }\n    scrollToMonth(day);\n    setCurrentMonth(day);\n  }, [currentMonth, scrollToMonth]);\n  const getMarkedDatesForItem = useCallback(item => {\n    if (markedDates && item) {\n      for (const [key, _] of Object.entries(markedDates)) {\n        if (sameMonth(new XDate(key), new XDate(item))) {\n          return markedDates;\n        }\n      }\n    }\n  }, [markedDates]);\n  const getItemLayout = useCallback((_, index) => {\n    return {\n      length: calendarSize,\n      offset: calendarSize * index,\n      index\n    };\n  }, []);\n  const isDateInRange = useCallback(date => {\n    for (let i = -range.current; i <= range.current; i++) {\n      const newMonth = currentMonth?.clone().addMonths(i, true);\n      if (sameMonth(date, newMonth)) {\n        return true;\n      }\n    }\n    return false;\n  }, [currentMonth]);\n  const renderItem = useCallback(({\n    item\n  }) => {\n    const dateString = toMarkingFormat(item);\n    const [year, month] = dateString.split('-');\n    const testId = `${testID}.item_${year}-${month}`;\n    const onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n    shouldMeasureHeader.current = false;\n    return _jsxDEV(CalendarListItem, Object.assign({}, calendarProps, {\n      testID: testId,\n      markedDates: getMarkedDatesForItem(item),\n      item: item,\n      style: calendarStyle,\n      horizontal: horizontal,\n      calendarWidth: calendarWidth,\n      calendarHeight: calendarHeight,\n      scrollToMonth: scrollToMonth,\n      visible: isDateInRange(item),\n      onHeaderLayout: onHeaderLayoutToPass\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this);\n  }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n  const renderStaticHeader = () => {\n    if (shouldUseStaticHeader) {\n      const onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n      shouldMeasureHeader.current = false;\n      return _jsxDEV(CalendarHeader, Object.assign({}, headerProps, {\n        testID: `${testID}.staticHeader`,\n        style: staticHeaderStyle,\n        month: currentMonth,\n        addMonth: addMonth,\n        onHeaderLayout: onHeaderLayoutToPass,\n        accessibilityElementsHidden: accessibilityElementsHidden,\n        importantForAccessibility: importantForAccessibility\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this);\n    }\n  };\n  const viewabilityConfig = useRef({\n    viewAreaCoveragePercentThreshold: 20\n  });\n  const onViewableItemsChanged = useCallback(({\n    viewableItems\n  }) => {\n    const newVisibleMonth = parseDate(viewableItems[0]?.item);\n    if (shouldFixRTL) {\n      const centerIndex = items.findIndex(item => isEqual(parseDate(current), item));\n      const adjustedOffset = centerIndex - items.findIndex(item => isEqual(newVisibleMonth, item));\n      visibleMonth.current = items[centerIndex + adjustedOffset];\n      setCurrentMonth(visibleMonth.current);\n    } else {\n      if (!sameDate(visibleMonth?.current, newVisibleMonth)) {\n        visibleMonth.current = newVisibleMonth;\n        setCurrentMonth(visibleMonth.current);\n      }\n    }\n  }, [items, shouldFixRTL, current]);\n  const viewabilityConfigCallbackPairs = useRef([{\n    viewabilityConfig: viewabilityConfig.current,\n    onViewableItemsChanged\n  }]);\n  return _jsxDEV(View, {\n    style: style.current.flatListContainer,\n    testID: testID,\n    children: [_jsxDEV(FlatList, {\n      ref: list,\n      windowSize: shouldFixRTL ? pastScrollRange + futureScrollRange + 1 : undefined,\n      style: listStyle,\n      showsVerticalScrollIndicator: showScrollIndicator,\n      showsHorizontalScrollIndicator: showScrollIndicator,\n      data: items,\n      renderItem: renderItem,\n      getItemLayout: getItemLayout,\n      initialNumToRender: range.current,\n      initialScrollIndex: initialDateIndex,\n      viewabilityConfigCallbackPairs: viewabilityConfigCallbackPairs.current,\n      testID: `${testID}.list`,\n      onLayout: onLayout,\n      removeClippedSubviews: removeClippedSubviews,\n      pagingEnabled: pagingEnabled,\n      scrollEnabled: scrollEnabled,\n      scrollsToTop: scrollsToTop,\n      horizontal: horizontal,\n      keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n      keyExtractor: keyExtractor,\n      onEndReachedThreshold: onEndReachedThreshold,\n      onEndReached: onEndReached,\n      nestedScrollEnabled: nestedScrollEnabled,\n      onMomentumScrollBegin: onMomentumScrollBegin,\n      onMomentumScrollEnd: onMomentumScrollEnd,\n      onScrollBeginDrag: onScrollBeginDrag,\n      onScrollEndDrag: onScrollEndDrag,\n      contentContainerStyle: contentContainerStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), renderStaticHeader()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 13\n  }, this);\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = Object.assign({}, Calendar.propTypes, {\n  pastScrollRange: PropTypes.number,\n  futureScrollRange: PropTypes.number,\n  calendarWidth: PropTypes.number,\n  calendarHeight: PropTypes.number,\n  calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticHeader: PropTypes.bool,\n  showScrollIndicator: PropTypes.bool,\n  animateScroll: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  scrollsToTop: PropTypes.bool,\n  pagingEnabled: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  keyExtractor: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onEndReached: PropTypes.func,\n  nestedScrollEnabled: PropTypes.bool\n});","map":{"version":3,"names":["findIndex","PropTypes","XDate","React","forwardRef","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","AccessibilityInfo","FlatList","View","extractCalendarProps","extractHeaderProps","parseDate","toMarkingFormat","xdateToData","page","sameDate","sameMonth","constants","useDidUpdate","styleConstructor","Calendar","CalendarListItem","CalendarHeader","isEqual","jsxDEV","_jsxDEV","CALENDAR_WIDTH","screenWidth","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","ref","scrollToDay","date","offset","animated","scrollToMonth","theme","current","firstDay","markedDates","headerStyle","onMonthChange","onVisibleMonthsChange","pastScrollRange","futureScrollRange","calendarHeight","calendarWidth","calendarStyle","animateScroll","showScrollIndicator","staticHeader","testID","style","propsStyle","onLayout","removeClippedSubviews","horizontal","pagingEnabled","scrollEnabled","nestedScrollEnabled","scrollsToTop","keyExtractor","_","index","String","keyboardShouldPersistTaps","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","contentContainerStyle","onEndReachedThreshold","onEndReached","onHeaderLayout","accessibilityElementsHidden","importantForAccessibility","calendarProps","headerProps","calendarSize","shouldUseStaticHeader","currentMonth","setCurrentMonth","shouldFixRTL","isRN73","isAndroidRTL","shouldMeasureHeader","list","range","initialDate","visibleMonth","items","months","i","rangeDate","clone","addMonths","push","staticHeaderStyle","listStyle","container","initialDateIndex","item","toString","getDateIndex","currMont","data","announceForAccessibility","scrollTo","diffMonths","Math","round","setDate","scrollAmount","week","days","length","floor","scrollToOffset","addMonth","count","day","getMarkedDatesForItem","key","Object","entries","getItemLayout","isDateInRange","newMonth","renderItem","dateString","year","month","split","testId","onHeaderLayoutToPass","undefined","assign","visible","fileName","_jsxFileName","lineNumber","columnNumber","renderStaticHeader","viewabilityConfig","viewAreaCoveragePercentThreshold","onViewableItemsChanged","viewableItems","newVisibleMonth","centerIndex","adjustedOffset","viewabilityConfigCallbackPairs","flatListContainer","children","windowSize","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","initialNumToRender","initialScrollIndex","displayName","propTypes","number","oneOfType","object","array","bool","oneOf","func"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-calendars/src/calendar-list/index.js"],"sourcesContent":["import findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { AccessibilityInfo, FlatList, View } from 'react-native';\nimport { extractCalendarProps, extractHeaderProps } from '../componentUpdater';\nimport { parseDate, toMarkingFormat, xdateToData } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\nimport constants from '../commons/constants';\nimport { useDidUpdate } from '../hooks';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nimport isEqual from 'lodash/isEqual';\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar-list.gif\n */\nconst CalendarList = (props, ref) => {\n    useImperativeHandle(ref, () => ({\n        scrollToDay: (date, offset, animated) => {\n            scrollToDay(date, offset, animated);\n        },\n        scrollToMonth: (date) => {\n            scrollToMonth(date);\n        }\n    }));\n    const { \n    /** Calendar props */\n    theme, current, firstDay, markedDates, headerStyle, onMonthChange, onVisibleMonthsChange, \n    /** CalendarList props */\n    pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, calendarStyle, animateScroll = false, showScrollIndicator = false, staticHeader, \n    /** View props */\n    testID, style: propsStyle, onLayout, removeClippedSubviews, \n    /** ScrollView props */\n    horizontal = false, pagingEnabled, scrollEnabled = true, nestedScrollEnabled = true, scrollsToTop = false, keyExtractor = (_, index) => String(index), keyboardShouldPersistTaps, onScrollBeginDrag, onScrollEndDrag, onMomentumScrollBegin, onMomentumScrollEnd, \n    /** FlatList props */\n    contentContainerStyle, onEndReachedThreshold, onEndReached, onHeaderLayout, accessibilityElementsHidden, importantForAccessibility } = props;\n    const calendarProps = extractCalendarProps(props);\n    const headerProps = extractHeaderProps(props);\n    const calendarSize = horizontal ? calendarWidth : calendarHeight;\n    const shouldUseStaticHeader = staticHeader && horizontal;\n    const [currentMonth, setCurrentMonth] = useState(parseDate(current));\n    const shouldFixRTL = useMemo(() => !constants.isRN73() && constants.isAndroidRTL && horizontal, [horizontal]);\n    /**\n     * we render a lot of months in the calendar list and we need to measure the header only once\n     * so we use this ref to limit the header measurement to the first render\n     */\n    const shouldMeasureHeader = useRef(true);\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const range = useRef(horizontal ? 1 : 3);\n    const initialDate = useRef(parseDate(current) || new XDate());\n    const visibleMonth = useRef(currentMonth);\n    const items = useMemo(() => {\n        const months = [];\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = initialDate.current?.clone().addMonths(i - pastScrollRange, true);\n            months.push(rangeDate);\n        }\n        return months;\n    }, [pastScrollRange, futureScrollRange]);\n    const staticHeaderStyle = useMemo(() => {\n        return [style.current.staticHeader, headerStyle];\n    }, [headerStyle]);\n    const listStyle = useMemo(() => {\n        return [style.current.container, propsStyle];\n    }, [propsStyle]);\n    const initialDateIndex = useMemo(() => {\n        return findIndex(items, function (item) {\n            return item.toString() === initialDate.current?.toString();\n        });\n    }, [items]);\n    const getDateIndex = useCallback((date) => {\n        return findIndex(items, function (item) {\n            return item.toString() === date.toString();\n        });\n    }, [items]);\n    useEffect(() => {\n        if (current) {\n            scrollToMonth(new XDate(current));\n        }\n    }, [current]);\n    useDidUpdate(() => {\n        const currMont = currentMonth?.clone();\n        if (currMont) {\n            const data = xdateToData(currMont);\n            onMonthChange?.(data);\n            onVisibleMonthsChange?.([data]);\n            AccessibilityInfo.announceForAccessibility(currMont.toString('MMMM yyyy'));\n        }\n    }, [currentMonth]);\n    const scrollToDay = (date, offset, animated) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        let scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(scrollTo, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], scrollTo)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        if (scrollAmount !== 0) {\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n        }\n    };\n    const scrollToMonth = useCallback((date) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        const scrollAmount = calendarSize * (shouldFixRTL ? pastScrollRange - diffMonths : pastScrollRange + diffMonths);\n        if (scrollAmount !== 0) {\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n        }\n    }, [calendarSize, shouldFixRTL, pastScrollRange, animateScroll]);\n    const addMonth = useCallback((count) => {\n        const day = currentMonth?.clone().addMonths(count, true);\n        if (sameMonth(day, currentMonth) || getDateIndex(day) === -1) {\n            return;\n        }\n        scrollToMonth(day);\n        setCurrentMonth(day);\n    }, [currentMonth, scrollToMonth]);\n    const getMarkedDatesForItem = useCallback((item) => {\n        if (markedDates && item) {\n            for (const [key, _] of Object.entries(markedDates)) {\n                if (sameMonth(new XDate(key), new XDate(item))) {\n                    return markedDates;\n                }\n            }\n        }\n    }, [markedDates]);\n    const getItemLayout = useCallback((_, index) => {\n        return {\n            length: calendarSize,\n            offset: calendarSize * index,\n            index\n        };\n    }, []);\n    const isDateInRange = useCallback((date) => {\n        for (let i = -range.current; i <= range.current; i++) {\n            const newMonth = currentMonth?.clone().addMonths(i, true);\n            if (sameMonth(date, newMonth)) {\n                return true;\n            }\n        }\n        return false;\n    }, [currentMonth]);\n    const renderItem = useCallback(({ item }) => {\n        const dateString = toMarkingFormat(item);\n        const [year, month] = dateString.split('-');\n        const testId = `${testID}.item_${year}-${month}`;\n        const onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n        shouldMeasureHeader.current = false;\n        return (<CalendarListItem {...calendarProps} testID={testId} markedDates={getMarkedDatesForItem(item)} item={item} style={calendarStyle} \n        // @ts-expect-error - type mismatch - ScrollView's 'horizontal' is nullable\n        horizontal={horizontal} calendarWidth={calendarWidth} calendarHeight={calendarHeight} scrollToMonth={scrollToMonth} visible={isDateInRange(item)} onHeaderLayout={onHeaderLayoutToPass}/>);\n    }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n    const renderStaticHeader = () => {\n        if (shouldUseStaticHeader) {\n            const onHeaderLayoutToPass = shouldMeasureHeader.current ? onHeaderLayout : undefined;\n            shouldMeasureHeader.current = false;\n            return (<CalendarHeader {...headerProps} testID={`${testID}.staticHeader`} style={staticHeaderStyle} month={currentMonth} addMonth={addMonth} onHeaderLayout={onHeaderLayoutToPass} accessibilityElementsHidden={accessibilityElementsHidden} // iOS\n             importantForAccessibility={importantForAccessibility} // Android\n            />);\n        }\n    };\n    /** Viewable month */\n    const viewabilityConfig = useRef({\n        viewAreaCoveragePercentThreshold: 20\n    });\n    const onViewableItemsChanged = useCallback(({ viewableItems }) => {\n        const newVisibleMonth = parseDate(viewableItems[0]?.item);\n        if (shouldFixRTL) {\n            const centerIndex = items.findIndex((item) => isEqual(parseDate(current), item));\n            const adjustedOffset = centerIndex - items.findIndex((item) => isEqual(newVisibleMonth, item));\n            visibleMonth.current = items[centerIndex + adjustedOffset];\n            setCurrentMonth(visibleMonth.current);\n        }\n        else {\n            if (!sameDate(visibleMonth?.current, newVisibleMonth)) {\n                visibleMonth.current = newVisibleMonth;\n                setCurrentMonth(visibleMonth.current);\n            }\n        }\n    }, [items, shouldFixRTL, current]);\n    const viewabilityConfigCallbackPairs = useRef([\n        {\n            viewabilityConfig: viewabilityConfig.current,\n            onViewableItemsChanged\n        }\n    ]);\n    return (<View style={style.current.flatListContainer} testID={testID}>\n      <FlatList ref={list} windowSize={shouldFixRTL ? pastScrollRange + futureScrollRange + 1 : undefined} style={listStyle} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={showScrollIndicator} data={items} renderItem={renderItem} getItemLayout={getItemLayout} initialNumToRender={range.current} initialScrollIndex={initialDateIndex} viewabilityConfigCallbackPairs={viewabilityConfigCallbackPairs.current} testID={`${testID}.list`} onLayout={onLayout} removeClippedSubviews={removeClippedSubviews} pagingEnabled={pagingEnabled} scrollEnabled={scrollEnabled} scrollsToTop={scrollsToTop} horizontal={horizontal} keyboardShouldPersistTaps={keyboardShouldPersistTaps} keyExtractor={keyExtractor} onEndReachedThreshold={onEndReachedThreshold} onEndReached={onEndReached} nestedScrollEnabled={nestedScrollEnabled} onMomentumScrollBegin={onMomentumScrollBegin} onMomentumScrollEnd={onMomentumScrollEnd} onScrollBeginDrag={onScrollBeginDrag} onScrollEndDrag={onScrollEndDrag} contentContainerStyle={contentContainerStyle}/>\n      {renderStaticHeader()}\n    </View>);\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = {\n    ...Calendar.propTypes,\n    pastScrollRange: PropTypes.number,\n    futureScrollRange: PropTypes.number,\n    calendarWidth: PropTypes.number,\n    calendarHeight: PropTypes.number,\n    calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    staticHeader: PropTypes.bool,\n    showScrollIndicator: PropTypes.bool,\n    animateScroll: PropTypes.bool,\n    scrollEnabled: PropTypes.bool,\n    scrollsToTop: PropTypes.bool,\n    pagingEnabled: PropTypes.bool,\n    horizontal: PropTypes.bool,\n    keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n    keyExtractor: PropTypes.func,\n    onEndReachedThreshold: PropTypes.number,\n    onEndReached: PropTypes.func,\n    nestedScrollEnabled: PropTypes.bool\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}