{"ast":null,"code":"import { useCallback, useEffect, useRef, useState } from 'react';\nimport inRange from 'lodash/inRange';\nimport times from 'lodash/times';\nimport debounce from 'lodash/debounce';\nimport constants from '../commons/constants';\nimport { generateDay } from '../dateutils';\nexport const PAGES_COUNT = 100;\nexport const NEAR_EDGE_THRESHOLD = 10;\nexport const INITIAL_PAGE = Math.floor(PAGES_COUNT / 2);\nconst UseTimelinePages = ({\n  date,\n  listRef,\n  numberOfDays,\n  shouldFixRTL\n}) => {\n  const pagesRef = useRef(times(PAGES_COUNT, i => {\n    return generateDay(date, numberOfDays * (i - Math.floor(PAGES_COUNT / 2)));\n  }));\n  const [pages, setPages] = useState(pagesRef.current);\n  const shouldResetPages = useRef(false);\n  useEffect(() => {\n    const updatedDays = times(PAGES_COUNT, i => {\n      return generateDay(date, numberOfDays * (i - Math.floor(PAGES_COUNT / 2)));\n    });\n    pagesRef.current = updatedDays;\n    setPages(updatedDays);\n  }, [numberOfDays]);\n  const isOutOfRange = useCallback(index => {\n    return !inRange(index, 0, PAGES_COUNT);\n  }, []);\n  const isNearEdges = useCallback(index => {\n    return !inRange(index, NEAR_EDGE_THRESHOLD, PAGES_COUNT - NEAR_EDGE_THRESHOLD);\n  }, []);\n  const isOnEdgePages = useCallback(index => {\n    return !inRange(index, 1, PAGES_COUNT - 1);\n  }, []);\n  const scrollToPage = pageIndex => {\n    listRef.current?.scrollToOffset(shouldFixRTL ? (PAGES_COUNT - 1 - pageIndex) * constants.screenWidth : pageIndex * constants.screenWidth, 0, false);\n  };\n  const resetPages = date => {\n    pagesRef.current = times(PAGES_COUNT, i => {\n      return generateDay(date, numberOfDays * (i - Math.floor(PAGES_COUNT / 2)));\n    });\n    setPages(pagesRef.current);\n    setTimeout(() => {\n      scrollToPage(INITIAL_PAGE);\n      shouldResetPages.current = false;\n    }, 0);\n  };\n  return {\n    resetPages: useCallback(resetPages, []),\n    resetPagesDebounce: useCallback(debounce(resetPages, 500, {\n      leading: false,\n      trailing: true\n    }), []),\n    scrollToPage: useCallback(scrollToPage, []),\n    scrollToPageDebounce: useCallback(debounce(scrollToPage, 250, {\n      leading: false,\n      trailing: true\n    }), []),\n    pagesRef,\n    pages,\n    shouldResetPages,\n    isOutOfRange,\n    isNearEdges,\n    isOnEdgePages\n  };\n};\nexport default UseTimelinePages;","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","inRange","times","debounce","constants","generateDay","PAGES_COUNT","NEAR_EDGE_THRESHOLD","INITIAL_PAGE","Math","floor","UseTimelinePages","date","listRef","numberOfDays","shouldFixRTL","pagesRef","i","pages","setPages","current","shouldResetPages","updatedDays","isOutOfRange","index","isNearEdges","isOnEdgePages","scrollToPage","pageIndex","scrollToOffset","screenWidth","resetPages","setTimeout","resetPagesDebounce","leading","trailing","scrollToPageDebounce"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-calendars/src/timeline-list/useTimelinePages.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport inRange from 'lodash/inRange';\nimport times from 'lodash/times';\nimport debounce from 'lodash/debounce';\nimport constants from '../commons/constants';\nimport { generateDay } from '../dateutils';\nexport const PAGES_COUNT = 100;\nexport const NEAR_EDGE_THRESHOLD = 10;\nexport const INITIAL_PAGE = Math.floor(PAGES_COUNT / 2);\nconst UseTimelinePages = ({ date, listRef, numberOfDays, shouldFixRTL }) => {\n    const pagesRef = useRef(times(PAGES_COUNT, i => {\n        return generateDay(date, numberOfDays * (i - Math.floor(PAGES_COUNT / 2)));\n    }));\n    const [pages, setPages] = useState(pagesRef.current);\n    const shouldResetPages = useRef(false);\n    useEffect(() => {\n        const updatedDays = times(PAGES_COUNT, i => {\n            return generateDay(date, numberOfDays * (i - Math.floor(PAGES_COUNT / 2)));\n        });\n        pagesRef.current = updatedDays;\n        setPages(updatedDays);\n    }, [numberOfDays]);\n    const isOutOfRange = useCallback((index) => {\n        return !inRange(index, 0, PAGES_COUNT);\n    }, []);\n    const isNearEdges = useCallback(index => {\n        return !inRange(index, NEAR_EDGE_THRESHOLD, PAGES_COUNT - NEAR_EDGE_THRESHOLD);\n    }, []);\n    const isOnEdgePages = useCallback(index => {\n        return !inRange(index, 1, PAGES_COUNT - 1);\n    }, []);\n    const scrollToPage = (pageIndex) => {\n        listRef.current?.scrollToOffset(shouldFixRTL ? ((PAGES_COUNT - 1 - pageIndex) * constants.screenWidth) : (pageIndex * constants.screenWidth), 0, false);\n    };\n    const resetPages = (date) => {\n        pagesRef.current = times(PAGES_COUNT, i => {\n            return generateDay(date, numberOfDays * (i - Math.floor(PAGES_COUNT / 2)));\n        });\n        setPages(pagesRef.current);\n        setTimeout(() => {\n            scrollToPage(INITIAL_PAGE);\n            shouldResetPages.current = false;\n        }, 0);\n    };\n    return {\n        resetPages: useCallback(resetPages, []),\n        resetPagesDebounce: useCallback(debounce(resetPages, 500, { leading: false, trailing: true }), []),\n        scrollToPage: useCallback(scrollToPage, []),\n        scrollToPageDebounce: useCallback(debounce(scrollToPage, 250, { leading: false, trailing: true }), []),\n        pagesRef,\n        pages,\n        shouldResetPages,\n        isOutOfRange,\n        isNearEdges,\n        isOnEdgePages\n    };\n};\nexport default UseTimelinePages;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}