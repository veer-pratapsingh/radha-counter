{"ast":null,"code":"import isFunction from 'lodash/isFunction';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { isToday } from '../../dateutils';\nimport { getDefaultLocale } from '../../services';\nimport { RESERVATION_DATE } from '../../testIDs';\nimport styleConstructor from './style';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nclass Reservation extends Component {\n  static displayName = 'Reservation';\n  static propTypes = {\n    date: PropTypes.any,\n    item: PropTypes.any,\n    theme: PropTypes.object,\n    rowHasChanged: PropTypes.func,\n    renderDay: PropTypes.func,\n    renderItem: PropTypes.func,\n    renderEmptyDate: PropTypes.func\n  };\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n  }\n  shouldComponentUpdate(nextProps) {\n    const d1 = this.props.date;\n    const d2 = nextProps.date;\n    const r1 = this.props.item;\n    const r2 = nextProps.item;\n    let changed = true;\n    if (!d1 && !d2) {\n      changed = false;\n    } else if (d1 && d2) {\n      if (d1.getTime() !== d2.getTime()) {\n        changed = true;\n      } else if (!r1 && !r2) {\n        changed = false;\n      } else if (r1 && r2) {\n        if (!d1 && !d2 || d1 && d2) {\n          if (isFunction(this.props.rowHasChanged)) {\n            changed = this.props.rowHasChanged(r1, r2);\n          }\n        }\n      }\n    }\n    return changed;\n  }\n  renderDate() {\n    const {\n      item,\n      date,\n      renderDay\n    } = this.props;\n    if (isFunction(renderDay)) {\n      return renderDay(date, item);\n    }\n    const today = date && isToday(date) ? this.style.today : undefined;\n    const dayNames = getDefaultLocale().dayNamesShort;\n    if (date) {\n      return _jsxs(View, {\n        style: this.style.day,\n        testID: RESERVATION_DATE,\n        children: [_jsx(Text, {\n          allowFontScaling: false,\n          style: [this.style.dayNum, today],\n          children: date.getDate()\n        }), _jsx(Text, {\n          allowFontScaling: false,\n          style: [this.style.dayText, today],\n          children: dayNames ? dayNames[date.getDay()] : undefined\n        })]\n      });\n    }\n    return _jsx(View, {\n      style: this.style.day\n    });\n  }\n  render() {\n    const {\n      item,\n      date,\n      renderItem,\n      renderEmptyDate\n    } = this.props;\n    let content;\n    if (item) {\n      const firstItem = date ? true : false;\n      if (isFunction(renderItem)) {\n        content = renderItem(item, firstItem);\n      }\n    } else if (isFunction(renderEmptyDate)) {\n      content = renderEmptyDate(date);\n    }\n    return _jsxs(View, {\n      style: this.style.container,\n      children: [this.renderDate(), _jsx(View, {\n        style: this.style.innerContainer,\n        children: content\n      })]\n    });\n  }\n}\nexport default Reservation;","map":{"version":3,"names":["isFunction","PropTypes","React","Component","View","Text","isToday","getDefaultLocale","RESERVATION_DATE","styleConstructor","jsx","_jsx","jsxs","_jsxs","Reservation","displayName","propTypes","date","any","item","theme","object","rowHasChanged","func","renderDay","renderItem","renderEmptyDate","constructor","props","style","shouldComponentUpdate","nextProps","d1","d2","r1","r2","changed","getTime","renderDate","today","undefined","dayNames","dayNamesShort","day","testID","children","allowFontScaling","dayNum","getDate","dayText","getDay","render","content","firstItem","container","innerContainer"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js"],"sourcesContent":["import isFunction from 'lodash/isFunction';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { View, Text } from 'react-native';\nimport { isToday } from '../../dateutils';\nimport { getDefaultLocale } from '../../services';\nimport { RESERVATION_DATE } from '../../testIDs';\nimport styleConstructor from './style';\nclass Reservation extends Component {\n    static displayName = 'Reservation';\n    static propTypes = {\n        date: PropTypes.any,\n        item: PropTypes.any,\n        theme: PropTypes.object,\n        rowHasChanged: PropTypes.func,\n        renderDay: PropTypes.func,\n        renderItem: PropTypes.func,\n        renderEmptyDate: PropTypes.func\n    };\n    style;\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n    }\n    shouldComponentUpdate(nextProps) {\n        const d1 = this.props.date;\n        const d2 = nextProps.date;\n        const r1 = this.props.item;\n        const r2 = nextProps.item;\n        let changed = true;\n        if (!d1 && !d2) {\n            changed = false;\n        }\n        else if (d1 && d2) {\n            if (d1.getTime() !== d2.getTime()) {\n                changed = true;\n            }\n            else if (!r1 && !r2) {\n                changed = false;\n            }\n            else if (r1 && r2) {\n                if ((!d1 && !d2) || (d1 && d2)) {\n                    if (isFunction(this.props.rowHasChanged)) {\n                        changed = this.props.rowHasChanged(r1, r2);\n                    }\n                }\n            }\n        }\n        return changed;\n    }\n    renderDate() {\n        const { item, date, renderDay } = this.props;\n        if (isFunction(renderDay)) {\n            return renderDay(date, item);\n        }\n        const today = date && isToday(date) ? this.style.today : undefined;\n        const dayNames = getDefaultLocale().dayNamesShort;\n        if (date) {\n            return (<View style={this.style.day} testID={RESERVATION_DATE}>\n          <Text allowFontScaling={false} style={[this.style.dayNum, today]}>\n            {date.getDate()}\n          </Text>\n          <Text allowFontScaling={false} style={[this.style.dayText, today]}>\n            {dayNames ? dayNames[date.getDay()] : undefined}\n          </Text>\n        </View>);\n        }\n        return <View style={this.style.day}/>;\n    }\n    render() {\n        const { item, date, renderItem, renderEmptyDate } = this.props;\n        let content;\n        if (item) {\n            const firstItem = date ? true : false;\n            if (isFunction(renderItem)) {\n                content = renderItem(item, firstItem);\n            }\n        }\n        else if (isFunction(renderEmptyDate)) {\n            content = renderEmptyDate(date);\n        }\n        return (<View style={this.style.container}>\n        {this.renderDate()}\n        <View style={this.style.innerContainer}>{content}</View>\n      </View>);\n    }\n}\nexport default Reservation;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEzC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,gBAAgB,QAAQ,gBAAgB;AACjD,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,gBAAgB,MAAM,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AACvC,MAAMC,WAAW,SAASX,SAAS,CAAC;EAChC,OAAOY,WAAW,GAAG,aAAa;EAClC,OAAOC,SAAS,GAAG;IACfC,IAAI,EAAEhB,SAAS,CAACiB,GAAG;IACnBC,IAAI,EAAElB,SAAS,CAACiB,GAAG;IACnBE,KAAK,EAAEnB,SAAS,CAACoB,MAAM;IACvBC,aAAa,EAAErB,SAAS,CAACsB,IAAI;IAC7BC,SAAS,EAAEvB,SAAS,CAACsB,IAAI;IACzBE,UAAU,EAAExB,SAAS,CAACsB,IAAI;IAC1BG,eAAe,EAAEzB,SAAS,CAACsB;EAC/B,CAAC;EAEDI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAGpB,gBAAgB,CAACmB,KAAK,CAACR,KAAK,CAAC;EAC9C;EACAU,qBAAqBA,CAACC,SAAS,EAAE;IAC7B,MAAMC,EAAE,GAAG,IAAI,CAACJ,KAAK,CAACX,IAAI;IAC1B,MAAMgB,EAAE,GAAGF,SAAS,CAACd,IAAI;IACzB,MAAMiB,EAAE,GAAG,IAAI,CAACN,KAAK,CAACT,IAAI;IAC1B,MAAMgB,EAAE,GAAGJ,SAAS,CAACZ,IAAI;IACzB,IAAIiB,OAAO,GAAG,IAAI;IAClB,IAAI,CAACJ,EAAE,IAAI,CAACC,EAAE,EAAE;MACZG,OAAO,GAAG,KAAK;IACnB,CAAC,MACI,IAAIJ,EAAE,IAAIC,EAAE,EAAE;MACf,IAAID,EAAE,CAACK,OAAO,CAAC,CAAC,KAAKJ,EAAE,CAACI,OAAO,CAAC,CAAC,EAAE;QAC/BD,OAAO,GAAG,IAAI;MAClB,CAAC,MACI,IAAI,CAACF,EAAE,IAAI,CAACC,EAAE,EAAE;QACjBC,OAAO,GAAG,KAAK;MACnB,CAAC,MACI,IAAIF,EAAE,IAAIC,EAAE,EAAE;QACf,IAAK,CAACH,EAAE,IAAI,CAACC,EAAE,IAAMD,EAAE,IAAIC,EAAG,EAAE;UAC5B,IAAIjC,UAAU,CAAC,IAAI,CAAC4B,KAAK,CAACN,aAAa,CAAC,EAAE;YACtCc,OAAO,GAAG,IAAI,CAACR,KAAK,CAACN,aAAa,CAACY,EAAE,EAAEC,EAAE,CAAC;UAC9C;QACJ;MACJ;IACJ;IACA,OAAOC,OAAO;EAClB;EACAE,UAAUA,CAAA,EAAG;IACT,MAAM;MAAEnB,IAAI;MAAEF,IAAI;MAAEO;IAAU,CAAC,GAAG,IAAI,CAACI,KAAK;IAC5C,IAAI5B,UAAU,CAACwB,SAAS,CAAC,EAAE;MACvB,OAAOA,SAAS,CAACP,IAAI,EAAEE,IAAI,CAAC;IAChC;IACA,MAAMoB,KAAK,GAAGtB,IAAI,IAAIX,OAAO,CAACW,IAAI,CAAC,GAAG,IAAI,CAACY,KAAK,CAACU,KAAK,GAAGC,SAAS;IAClE,MAAMC,QAAQ,GAAGlC,gBAAgB,CAAC,CAAC,CAACmC,aAAa;IACjD,IAAIzB,IAAI,EAAE;MACN,OAAQJ,KAAA,CAACT,IAAI;QAACyB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACc,GAAI;QAACC,MAAM,EAAEpC,gBAAiB;QAAAqC,QAAA,GAChElC,IAAA,CAACN,IAAI;UAACyC,gBAAgB,EAAE,KAAM;UAACjB,KAAK,EAAE,CAAC,IAAI,CAACA,KAAK,CAACkB,MAAM,EAAER,KAAK,CAAE;UAAAM,QAAA,EAC9D5B,IAAI,CAAC+B,OAAO,CAAC;QAAC,CACX,CAAC,EACPrC,IAAA,CAACN,IAAI;UAACyC,gBAAgB,EAAE,KAAM;UAACjB,KAAK,EAAE,CAAC,IAAI,CAACA,KAAK,CAACoB,OAAO,EAAEV,KAAK,CAAE;UAAAM,QAAA,EAC/DJ,QAAQ,GAAGA,QAAQ,CAACxB,IAAI,CAACiC,MAAM,CAAC,CAAC,CAAC,GAAGV;QAAS,CAC3C,CAAC;MAAA,CACH,CAAC;IACP;IACA,OAAO7B,IAAA,CAACP,IAAI;MAACyB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACc;IAAI,CAAC,CAAC;EACzC;EACAQ,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEhC,IAAI;MAAEF,IAAI;MAAEQ,UAAU;MAAEC;IAAgB,CAAC,GAAG,IAAI,CAACE,KAAK;IAC9D,IAAIwB,OAAO;IACX,IAAIjC,IAAI,EAAE;MACN,MAAMkC,SAAS,GAAGpC,IAAI,GAAG,IAAI,GAAG,KAAK;MACrC,IAAIjB,UAAU,CAACyB,UAAU,CAAC,EAAE;QACxB2B,OAAO,GAAG3B,UAAU,CAACN,IAAI,EAAEkC,SAAS,CAAC;MACzC;IACJ,CAAC,MACI,IAAIrD,UAAU,CAAC0B,eAAe,CAAC,EAAE;MAClC0B,OAAO,GAAG1B,eAAe,CAACT,IAAI,CAAC;IACnC;IACA,OAAQJ,KAAA,CAACT,IAAI;MAACyB,KAAK,EAAE,IAAI,CAACA,KAAK,CAACyB,SAAU;MAAAT,QAAA,GACzC,IAAI,CAACP,UAAU,CAAC,CAAC,EAClB3B,IAAA,CAACP,IAAI;QAACyB,KAAK,EAAE,IAAI,CAACA,KAAK,CAAC0B,cAAe;QAAAV,QAAA,EAAEO;MAAO,CAAO,CAAC;IAAA,CACpD,CAAC;EACT;AACJ;AACA,eAAetC,WAAW","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}