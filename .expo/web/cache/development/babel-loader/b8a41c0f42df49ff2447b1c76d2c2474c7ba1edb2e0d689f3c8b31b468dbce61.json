{"ast":null,"code":"const {\n  isToday,\n  isDateNotInRange,\n  sameMonth\n} = require('./dateutils');\nconst {\n  toMarkingFormat\n} = require('./interface');\nexport function getState(day, current, props, disableDaySelection) {\n  const {\n    minDate,\n    maxDate,\n    disabledByDefault,\n    disabledByWeekDays,\n    context\n  } = props;\n  let state;\n  if (!disableDaySelection && (context?.selectedDate ?? toMarkingFormat(current)) === toMarkingFormat(day)) {\n    state = 'selected';\n  } else if (isToday(day)) {\n    state = 'today';\n  } else if (disabledByDefault) {\n    state = 'disabled';\n  } else if (isDateNotInRange(day, minDate, maxDate)) {\n    state = 'disabled';\n  } else if (!sameMonth(day, current)) {\n    state = 'disabled';\n  } else if (disabledByWeekDays && disabledByWeekDays.indexOf(day.getDay()) !== -1) {\n    state = 'disabled';\n  }\n  return state;\n}","map":{"version":3,"names":["isToday","isDateNotInRange","sameMonth","require","toMarkingFormat","getState","day","current","props","disableDaySelection","minDate","maxDate","disabledByDefault","disabledByWeekDays","context","state","selectedDate","indexOf","getDay"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-calendars/src/day-state-manager.js"],"sourcesContent":["const { isToday, isDateNotInRange, sameMonth } = require('./dateutils');\nconst { toMarkingFormat } = require('./interface');\nexport function getState(day, current, props, disableDaySelection) {\n    const { minDate, maxDate, disabledByDefault, disabledByWeekDays, context } = props;\n    let state;\n    if (!disableDaySelection && (context?.selectedDate ?? toMarkingFormat(current)) === toMarkingFormat(day)) {\n        state = 'selected';\n    }\n    else if (isToday(day)) {\n        state = 'today';\n    }\n    else if (disabledByDefault) {\n        state = 'disabled';\n    }\n    else if (isDateNotInRange(day, minDate, maxDate)) {\n        state = 'disabled';\n    }\n    else if (!sameMonth(day, current)) {\n        state = 'disabled';\n    }\n    else if (disabledByWeekDays && disabledByWeekDays.indexOf(day.getDay()) !== -1) {\n        state = 'disabled';\n    }\n    return state;\n}\n"],"mappings":"AAAA,MAAM;EAAEA,OAAO;EAAEC,gBAAgB;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AACvE,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,aAAa,CAAC;AAClD,OAAO,SAASE,QAAQA,CAACC,GAAG,EAAEC,OAAO,EAAEC,KAAK,EAAEC,mBAAmB,EAAE;EAC/D,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,iBAAiB;IAAEC,kBAAkB;IAAEC;EAAQ,CAAC,GAAGN,KAAK;EAClF,IAAIO,KAAK;EACT,IAAI,CAACN,mBAAmB,IAAI,CAACK,OAAO,EAAEE,YAAY,IAAIZ,eAAe,CAACG,OAAO,CAAC,MAAMH,eAAe,CAACE,GAAG,CAAC,EAAE;IACtGS,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAIf,OAAO,CAACM,GAAG,CAAC,EAAE;IACnBS,KAAK,GAAG,OAAO;EACnB,CAAC,MACI,IAAIH,iBAAiB,EAAE;IACxBG,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAId,gBAAgB,CAACK,GAAG,EAAEI,OAAO,EAAEC,OAAO,CAAC,EAAE;IAC9CI,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAI,CAACb,SAAS,CAACI,GAAG,EAAEC,OAAO,CAAC,EAAE;IAC/BQ,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAIF,kBAAkB,IAAIA,kBAAkB,CAACI,OAAO,CAACX,GAAG,CAACY,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;IAC5EH,KAAK,GAAG,UAAU;EACtB;EACA,OAAOA,KAAK;AAChB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}