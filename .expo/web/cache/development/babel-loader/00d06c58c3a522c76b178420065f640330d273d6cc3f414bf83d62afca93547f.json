{"ast":null,"code":"'use client';\n\nimport { ensureNativeModulesAreInstalled } from './ensureNativeModulesAreInstalled';\nensureNativeModulesAreInstalled();\nexport default globalThis.expo.EventEmitter;","map":{"version":3,"names":["ensureNativeModulesAreInstalled","globalThis","expo","EventEmitter"],"sources":["C:/Users/chaud/radha-counter/node_modules/expo-modules-core/src/EventEmitter.ts"],"sourcesContent":["'use client';\n\nimport { ensureNativeModulesAreInstalled } from './ensureNativeModulesAreInstalled';\nimport type { EventEmitter } from './ts-declarations/EventEmitter';\n\nensureNativeModulesAreInstalled();\n\n/**\n * A subscription object that allows to conveniently remove an event listener from the emitter.\n */\nexport interface EventSubscription {\n  /**\n   * Removes an event listener for which the subscription has been created.\n   * After calling this function, the listener will no longer receive any events from the emitter.\n   */\n  remove(): void;\n}\n\nexport default globalThis.expo.EventEmitter as typeof EventEmitter;\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,+BAA+B,QAAQ,mCAAmC;AAGnFA,+BAA+B,CAAC,CAAC;AAajC,eAAeC,UAAU,CAACC,IAAI,CAACC,YAAY","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}