{"ast":null,"code":"export async function reloadAppAsync(reason = 'Reloaded from JS call') {\n  await globalThis.expo?.reloadAppAsync(reason);\n}","map":{"version":3,"names":["reloadAppAsync","reason","globalThis","expo"],"sources":["C:/Users/chaud/radha-counter/node_modules/expo-modules-core/src/reload.ts"],"sourcesContent":["/**\n * Reloads the app. This method works for both release and debug builds.\n *\n * Unlike [`Updates.reloadAsync()`](/versions/latest/sdk/updates/#updatesreloadasync),\n * this function does not use a new update even if one is available. It only reloads the app using the same JavaScript bundle that is currently running.\n *\n * @param reason The reason for reloading the app. This is used only for some platforms.\n */\nexport async function reloadAppAsync(reason: string = 'Reloaded from JS call'): Promise<void> {\n  await globalThis.expo?.reloadAppAsync(reason);\n}\n"],"mappings":"AAQA,OAAO,eAAeA,cAAcA,CAACC,MAAc,GAAG,uBAAuB,EAAiB;EAC5F,MAAMC,UAAU,CAACC,IAAI,EAAEH,cAAc,CAACC,MAAM,CAAC;AAC/C","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}