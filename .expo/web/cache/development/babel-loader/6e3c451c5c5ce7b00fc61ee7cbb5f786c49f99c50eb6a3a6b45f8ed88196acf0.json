{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"context\", \"markedDates\"],\n  _excluded2 = [\"context\", \"markedDates\"];\nimport XDate from 'xdate';\nimport React, { useRef, useMemo, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport isEqual from 'lodash/isEqual';\nimport { getPartialWeekDates, getWeekDates, sameMonth } from '../dateutils';\nimport { parseDate, toMarkingFormat } from '../interface';\nimport { getState } from '../day-state-manager';\nimport { extractDayProps } from '../componentUpdater';\nimport styleConstructor from './style';\nimport Day from '../calendar/day/index';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction arePropsEqual(prevProps, nextProps) {\n  const {\n      context: prevContext,\n      markedDates: prevMarkings\n    } = prevProps,\n    prevOthers = _objectWithoutPropertiesLoose(prevProps, _excluded);\n  const {\n      context: nextContext,\n      markedDates: nextMarkings\n    } = nextProps,\n    nextOthers = _objectWithoutPropertiesLoose(nextProps, _excluded2);\n  return isEqual(prevContext, nextContext) && isEqual(prevMarkings, nextMarkings) && isEqual(prevOthers, nextOthers);\n}\nconst Week = React.memo(props => {\n  const {\n    theme,\n    current,\n    firstDay,\n    hideExtraDays,\n    markedDates,\n    onDayPress,\n    onDayLongPress,\n    style: propsStyle,\n    numberOfDays = 1,\n    timelineLeftInset,\n    testID\n  } = props;\n  const style = useRef(styleConstructor(theme));\n  const disableDaySelection = useMemo(() => {\n    return !!numberOfDays && numberOfDays > 1;\n  }, [numberOfDays]);\n  const getWeek = useCallback(date => {\n    if (date) {\n      return getWeekDates(date, firstDay);\n    }\n  }, [firstDay]);\n  const partialWeekStyle = useMemo(() => {\n    return [style.current.partialWeek, {\n      paddingLeft: timelineLeftInset\n    }];\n  }, [timelineLeftInset]);\n  const dayProps = extractDayProps(props);\n  const currXdate = useMemo(() => parseDate(current), [current]);\n  const renderDay = (day, id) => {\n    if (current && hideExtraDays) {\n      if (!sameMonth(day, currXdate)) {\n        return _jsx(View, {\n          style: style.current.emptyDayContainer\n        }, id);\n      }\n    }\n    const dayString = toMarkingFormat(day);\n    return _jsx(View, {\n      style: style.current.dayContainer,\n      children: _jsx(Day, Object.assign({}, dayProps, {\n        testID: `${testID}.day_${dayString}`,\n        date: dayString,\n        state: getState(day, currXdate, props, disableDaySelection),\n        marking: disableDaySelection ? Object.assign({}, markedDates?.[dayString], {\n          disableTouchEvent: true\n        }) : markedDates?.[dayString],\n        onPress: onDayPress,\n        onLongPress: onDayLongPress\n      }))\n    }, id);\n  };\n  const renderWeek = () => {\n    const dates = numberOfDays > 1 ? getPartialWeekDates(current, numberOfDays) : getWeek(current);\n    const week = [];\n    if (dates) {\n      const todayIndex = dates?.indexOf(parseDate(new Date())) || -1;\n      const sliced = dates.slice(todayIndex, numberOfDays);\n      const datesToRender = numberOfDays > 1 && todayIndex > -1 ? sliced : dates;\n      datesToRender.forEach((day, id) => {\n        const d = day instanceof XDate ? day : new XDate(day);\n        week.push(renderDay(d, id));\n      }, this);\n    }\n    return week;\n  };\n  return _jsx(View, {\n    style: style.current.container,\n    testID: `${testID}.week_${current}`,\n    children: _jsx(View, {\n      style: [style.current.week, numberOfDays > 1 ? partialWeekStyle : undefined, propsStyle],\n      children: renderWeek()\n    })\n  });\n}, arePropsEqual);\nexport default Week;\nWeek.displayName = 'Week';","map":{"version":3,"names":["XDate","React","useRef","useMemo","useCallback","View","isEqual","getPartialWeekDates","getWeekDates","sameMonth","parseDate","toMarkingFormat","getState","extractDayProps","styleConstructor","Day","jsx","_jsx","arePropsEqual","prevProps","nextProps","context","prevContext","markedDates","prevMarkings","prevOthers","_objectWithoutPropertiesLoose","_excluded","nextContext","nextMarkings","nextOthers","_excluded2","Week","memo","props","theme","current","firstDay","hideExtraDays","onDayPress","onDayLongPress","style","propsStyle","numberOfDays","timelineLeftInset","testID","disableDaySelection","getWeek","date","partialWeekStyle","partialWeek","paddingLeft","dayProps","currXdate","renderDay","day","id","emptyDayContainer","dayString","dayContainer","children","Object","assign","state","marking","disableTouchEvent","onPress","onLongPress","renderWeek","dates","week","todayIndex","indexOf","Date","sliced","slice","datesToRender","forEach","d","push","container","undefined","displayName"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-calendars/src/expandableCalendar/week.js"],"sourcesContent":["import XDate from 'xdate';\nimport React, { useRef, useMemo, useCallback } from 'react';\nimport { View } from 'react-native';\nimport isEqual from 'lodash/isEqual';\nimport { getPartialWeekDates, getWeekDates, sameMonth } from '../dateutils';\nimport { parseDate, toMarkingFormat } from '../interface';\nimport { getState } from '../day-state-manager';\nimport { extractDayProps } from '../componentUpdater';\nimport styleConstructor from './style';\nimport Day from '../calendar/day/index';\nfunction arePropsEqual(prevProps, nextProps) {\n    const { context: prevContext, markedDates: prevMarkings, ...prevOthers } = prevProps;\n    const { context: nextContext, markedDates: nextMarkings, ...nextOthers } = nextProps;\n    return isEqual(prevContext, nextContext) && isEqual(prevMarkings, nextMarkings) && isEqual(prevOthers, nextOthers);\n}\nconst Week = React.memo((props) => {\n    const { theme, current, firstDay, hideExtraDays, markedDates, onDayPress, onDayLongPress, style: propsStyle, numberOfDays = 1, timelineLeftInset, testID } = props;\n    const style = useRef(styleConstructor(theme));\n    const disableDaySelection = useMemo(() => {\n        return !!numberOfDays && numberOfDays > 1;\n    }, [numberOfDays]);\n    const getWeek = useCallback((date) => {\n        if (date) {\n            return getWeekDates(date, firstDay);\n        }\n    }, [firstDay]);\n    const partialWeekStyle = useMemo(() => {\n        return [style.current.partialWeek, { paddingLeft: timelineLeftInset }];\n    }, [timelineLeftInset]);\n    const dayProps = extractDayProps(props);\n    const currXdate = useMemo(() => parseDate(current), [current]);\n    const renderDay = (day, id) => {\n        // hide extra days\n        if (current && hideExtraDays) {\n            if (!sameMonth(day, currXdate)) {\n                return <View key={id} style={style.current.emptyDayContainer}/>;\n            }\n        }\n        const dayString = toMarkingFormat(day);\n        return (<View style={style.current.dayContainer} key={id}>\n        <Day {...dayProps} testID={`${testID}.day_${dayString}`} date={dayString} state={getState(day, currXdate, props, disableDaySelection)} marking={disableDaySelection ? { ...markedDates?.[dayString], disableTouchEvent: true } : markedDates?.[dayString]} onPress={onDayPress} onLongPress={onDayLongPress}/>\n      </View>);\n    };\n    const renderWeek = () => {\n        const dates = numberOfDays > 1 ? getPartialWeekDates(current, numberOfDays) : getWeek(current);\n        const week = [];\n        if (dates) {\n            const todayIndex = dates?.indexOf(parseDate(new Date())) || -1;\n            const sliced = dates.slice(todayIndex, numberOfDays);\n            const datesToRender = numberOfDays > 1 && todayIndex > -1 ? sliced : dates;\n            datesToRender.forEach((day, id) => {\n                const d = day instanceof XDate ? day : new XDate(day);\n                week.push(renderDay(d, id));\n            }, this);\n        }\n        return week;\n    };\n    return (<View style={style.current.container} testID={`${testID}.week_${current}`}>\n      <View style={[style.current.week, numberOfDays > 1 ? partialWeekStyle : undefined, propsStyle]}>\n        {renderWeek()}\n      </View>\n    </View>);\n}, arePropsEqual);\nexport default Week;\nWeek.displayName = 'Week';\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}