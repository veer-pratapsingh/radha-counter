{"ast":null,"code":"const XDate=require('xdate');export function padNumber(n){if(n<10){return'0'+n;}return n;}export function xdateToData(date){const d=date instanceof XDate?date:new XDate(date);const dateString=toMarkingFormat(d);return{year:d.getFullYear(),month:d.getMonth()+1,day:d.getDate(),timestamp:new XDate(dateString,true).getTime(),dateString:dateString};}export function parseDate(d){if(!d){return;}else if(d.timestamp){return new XDate(d.timestamp,true);}else if(d instanceof XDate){return new XDate(toMarkingFormat(d),true);}else if(d.getTime){const dateString=d.getFullYear()+'-'+padNumber(d.getMonth()+1)+'-'+padNumber(d.getDate());return new XDate(dateString,true);}else if(d.year){const dateString=d.year+'-'+padNumber(d.month)+'-'+padNumber(d.day);return new XDate(dateString,true);}else if(d){return new XDate(d,true);}}export function toMarkingFormat(d){if(!isNaN(d.getTime())){const year=`${d.getFullYear()}`;const month=d.getMonth()+1;const doubleDigitMonth=month<10?`0${month}`:`${month}`;const day=d.getDate();const doubleDigitDay=day<10?`0${day}`:`${day}`;return year+'-'+doubleDigitMonth+'-'+doubleDigitDay;}return'Invalid Date';}","map":{"version":3,"names":["XDate","require","padNumber","n","xdateToData","date","d","dateString","toMarkingFormat","year","getFullYear","month","getMonth","day","getDate","timestamp","getTime","parseDate","isNaN","doubleDigitMonth","doubleDigitDay"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-calendars/src/interface.js"],"sourcesContent":["const XDate = require('xdate');\nexport function padNumber(n) {\n    if (n < 10) {\n        return '0' + n;\n    }\n    return n;\n}\nexport function xdateToData(date) {\n    const d = date instanceof XDate ? date : new XDate(date);\n    const dateString = toMarkingFormat(d);\n    return {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate(),\n        timestamp: new XDate(dateString, true).getTime(),\n        dateString: dateString\n    };\n}\nexport function parseDate(d) {\n    if (!d) {\n        return;\n    }\n    else if (d.timestamp) {\n        // conventional data timestamp\n        return new XDate(d.timestamp, true);\n    }\n    else if (d instanceof XDate) {\n        // xdate\n        return new XDate(toMarkingFormat(d), true);\n    }\n    else if (d.getTime) {\n        // javascript date\n        const dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n        return new XDate(dateString, true);\n    }\n    else if (d.year) {\n        const dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n        return new XDate(dateString, true);\n    }\n    else if (d) {\n        // timestamp number or date formatted as string\n        return new XDate(d, true);\n    }\n}\nexport function toMarkingFormat(d) {\n    if (!isNaN(d.getTime())) {\n        const year = `${d.getFullYear()}`;\n        const month = d.getMonth() + 1;\n        const doubleDigitMonth = month < 10 ? `0${month}` : `${month}`;\n        const day = d.getDate();\n        const doubleDigitDay = day < 10 ? `0${day}` : `${day}`;\n        return year + '-' + doubleDigitMonth + '-' + doubleDigitDay;\n    }\n    return 'Invalid Date';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}