{"ast":null,"code":"import{includes}from'lodash';import XDate from'xdate';import React,{useRef,useState,useCallback,useMemo}from'react';import View from\"react-native-web/dist/exports/View\";import{sameMonth}from'../../dateutils';import{xdateToData}from'../../interface';import{useDidUpdate}from'../../hooks';import{UpdateSources}from'../commons';import styleConstructor from'../style';import CalendarContext from'./index';import TodayButton from'./todayButton';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CalendarProvider=props=>{const{theme,date,onDateChanged,onMonthChange,disableAutoDaySelection,showTodayButton=false,disabledOpacity,todayBottomMargin,todayButtonStyle,style:propsStyle,numberOfDays,timelineLeftInset=72,children}=props;const style=useRef(styleConstructor(theme));const todayButton=useRef();const prevDate=useRef(date);const currDate=useRef(date);const[currentDate,setCurrentDate]=useState(date);const[selectedDate,setSelectedDate]=useState(date);const[updateSource,setUpdateSource]=useState(UpdateSources.CALENDAR_INIT);const wrapperStyle=useMemo(()=>{return[style.current.contextWrapper,propsStyle];},[style,propsStyle]);useDidUpdate(()=>{if(date&&date!==currentDate){_setDate(date,UpdateSources.PROP_UPDATE);}},[date]);const getUpdateSource=useCallback(updateSource=>{if(updateSource===UpdateSources.ARROW_PRESS||updateSource===UpdateSources.WEEK_ARROW_PRESS){return UpdateSources.PAGE_SCROLL;}return updateSource;},[]);const _setDate=useCallback((date,updateSource)=>{prevDate.current=currDate.current;currDate.current=date;setCurrentDate(date);if(!includes(disableAutoDaySelection,updateSource)){setSelectedDate(date);}setUpdateSource(updateSource);const _updateSource=getUpdateSource(updateSource);onDateChanged?.(date,_updateSource);if(!sameMonth(new XDate(date),new XDate(prevDate.current))){onMonthChange?.(xdateToData(new XDate(date)),_updateSource);}},[onDateChanged,onMonthChange,getUpdateSource]);const _setDisabled=useCallback(disabled=>{if(showTodayButton){todayButton.current?.disable(disabled);}},[showTodayButton]);const contextValue=useMemo(()=>{return{date:currentDate,prevDate:prevDate.current,selectedDate,updateSource:updateSource,setDate:_setDate,setDisabled:_setDisabled,numberOfDays,timelineLeftInset};},[currentDate,updateSource,numberOfDays,_setDisabled]);const renderTodayButton=()=>{return _jsx(TodayButton,{ref:todayButton,disabledOpacity:disabledOpacity,margin:todayBottomMargin,style:todayButtonStyle,theme:theme});};return _jsxs(CalendarContext.Provider,{value:contextValue,children:[_jsx(View,{style:wrapperStyle,children:children},numberOfDays),showTodayButton&&renderTodayButton()]});};export default CalendarProvider;CalendarProvider.displayName='CalendarProvider';","map":{"version":3,"names":["includes","XDate","React","useRef","useState","useCallback","useMemo","View","sameMonth","xdateToData","useDidUpdate","UpdateSources","styleConstructor","CalendarContext","TodayButton","jsx","_jsx","jsxs","_jsxs","CalendarProvider","props","theme","date","onDateChanged","onMonthChange","disableAutoDaySelection","showTodayButton","disabledOpacity","todayBottomMargin","todayButtonStyle","style","propsStyle","numberOfDays","timelineLeftInset","children","todayButton","prevDate","currDate","currentDate","setCurrentDate","selectedDate","setSelectedDate","updateSource","setUpdateSource","CALENDAR_INIT","wrapperStyle","current","contextWrapper","_setDate","PROP_UPDATE","getUpdateSource","ARROW_PRESS","WEEK_ARROW_PRESS","PAGE_SCROLL","_updateSource","_setDisabled","disabled","disable","contextValue","setDate","setDisabled","renderTodayButton","ref","margin","Provider","value","displayName"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-calendars/src/expandableCalendar/Context/Provider.js"],"sourcesContent":["import { includes } from 'lodash';\nimport XDate from 'xdate';\nimport React, { useRef, useState, useCallback, useMemo } from 'react';\nimport { View } from 'react-native';\nimport { sameMonth } from '../../dateutils';\nimport { xdateToData } from '../../interface';\nimport { useDidUpdate } from '../../hooks';\nimport { UpdateSources } from '../commons';\nimport styleConstructor from '../style';\nimport CalendarContext from './index';\nimport TodayButton from './todayButton';\n/**\n * @description: Calendar context provider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nconst CalendarProvider = (props) => {\n    const { theme, date, onDateChanged, onMonthChange, disableAutoDaySelection, showTodayButton = false, disabledOpacity, todayBottomMargin, todayButtonStyle, style: propsStyle, numberOfDays, timelineLeftInset = 72, children } = props;\n    const style = useRef(styleConstructor(theme));\n    const todayButton = useRef();\n    const prevDate = useRef(date);\n    const currDate = useRef(date); // for setDate only to keep prevDate up to date\n    const [currentDate, setCurrentDate] = useState(date);\n    const [selectedDate, setSelectedDate] = useState(date);\n    const [updateSource, setUpdateSource] = useState(UpdateSources.CALENDAR_INIT);\n    const wrapperStyle = useMemo(() => {\n        return [style.current.contextWrapper, propsStyle];\n    }, [style, propsStyle]);\n    useDidUpdate(() => {\n        if (date && date !== currentDate) {\n            _setDate(date, UpdateSources.PROP_UPDATE);\n        }\n    }, [date]);\n    const getUpdateSource = useCallback((updateSource) => {\n        // NOTE: this comes to avoid breaking those how listen to the update source in onDateChanged and onMonthChange - remove on V2\n        if (updateSource === UpdateSources.ARROW_PRESS || updateSource === UpdateSources.WEEK_ARROW_PRESS) {\n            return UpdateSources.PAGE_SCROLL;\n        }\n        return updateSource;\n    }, []);\n    const _setDate = useCallback((date, updateSource) => {\n        prevDate.current = currDate.current;\n        currDate.current = date;\n        setCurrentDate(date);\n        if (!includes(disableAutoDaySelection, updateSource)) {\n            setSelectedDate(date);\n        }\n        setUpdateSource(updateSource);\n        const _updateSource = getUpdateSource(updateSource);\n        onDateChanged?.(date, _updateSource);\n        if (!sameMonth(new XDate(date), new XDate(prevDate.current))) {\n            onMonthChange?.(xdateToData(new XDate(date)), _updateSource);\n        }\n    }, [onDateChanged, onMonthChange, getUpdateSource]);\n    const _setDisabled = useCallback((disabled) => {\n        if (showTodayButton) {\n            todayButton.current?.disable(disabled);\n        }\n    }, [showTodayButton]);\n    const contextValue = useMemo(() => {\n        return {\n            date: currentDate,\n            prevDate: prevDate.current,\n            selectedDate,\n            updateSource: updateSource,\n            setDate: _setDate,\n            setDisabled: _setDisabled,\n            numberOfDays,\n            timelineLeftInset\n        };\n    }, [currentDate, updateSource, numberOfDays, _setDisabled]);\n    const renderTodayButton = () => {\n        return (<TodayButton ref={todayButton} disabledOpacity={disabledOpacity} margin={todayBottomMargin} style={todayButtonStyle} theme={theme}/>);\n    };\n    return (<CalendarContext.Provider value={contextValue}>\n      <View style={wrapperStyle} key={numberOfDays}>{children}</View>\n      {showTodayButton && renderTodayButton()}\n    </CalendarContext.Provider>);\n};\nexport default CalendarProvider;\nCalendarProvider.displayName = 'CalendarProvider';\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}