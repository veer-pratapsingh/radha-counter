{"ast":null,"code":"\"use strict\";import mergeOptions from\"merge-options\";const merge=mergeOptions.bind({concatArrays:true,ignoreUndefined:true});function mergeLocalStorageItem(key,value){const oldValue=window.localStorage.getItem(key);if(oldValue){const oldObject=JSON.parse(oldValue);const newObject=JSON.parse(value);const nextValue=JSON.stringify(merge(oldObject,newObject));window.localStorage.setItem(key,nextValue);}else{window.localStorage.setItem(key,value);}}function createPromise(getValue,callback){return new Promise((resolve,reject)=>{try{const value=getValue();callback?.(null,value);resolve(value);}catch(err){callback?.(err);reject(err);}});}function createPromiseAll(promises,callback,processResult){return Promise.all(promises).then(result=>{const value=processResult?.(result)??null;callback?.(null,value);return Promise.resolve(value);},errors=>{callback?.(errors);return Promise.reject(errors);});}const AsyncStorage={getItem:(key,callback)=>{return createPromise(()=>window.localStorage.getItem(key),callback);},setItem:(key,value,callback)=>{return createPromise(()=>window.localStorage.setItem(key,value),callback);},removeItem:(key,callback)=>{return createPromise(()=>window.localStorage.removeItem(key),callback);},mergeItem:(key,value,callback)=>{return createPromise(()=>mergeLocalStorageItem(key,value),callback);},clear:callback=>{return createPromise(()=>window.localStorage.clear(),callback);},getAllKeys:callback=>{return createPromise(()=>{const numberOfKeys=window.localStorage.length;const keys=[];for(let i=0;i<numberOfKeys;i+=1){const key=window.localStorage.key(i)||\"\";keys.push(key);}return keys;},callback);},flushGetRequests:()=>undefined,multiGet:(keys,callback)=>{const promises=keys.map(key=>AsyncStorage.getItem(key));const processResult=result=>result.map((value,i)=>[keys[i],value]);return createPromiseAll(promises,callback,processResult);},multiSet:(keyValuePairs,callback)=>{const promises=keyValuePairs.map(item=>AsyncStorage.setItem(item[0],item[1]));return createPromiseAll(promises,callback);},multiRemove:(keys,callback)=>{const promises=keys.map(key=>AsyncStorage.removeItem(key));return createPromiseAll(promises,callback);},multiMerge:(keyValuePairs,callback)=>{const promises=keyValuePairs.map(item=>AsyncStorage.mergeItem(item[0],item[1]));return createPromiseAll(promises,callback);}};export default AsyncStorage;","map":{"version":3,"names":["mergeOptions","merge","bind","concatArrays","ignoreUndefined","mergeLocalStorageItem","key","value","oldValue","window","localStorage","getItem","oldObject","JSON","parse","newObject","nextValue","stringify","setItem","createPromise","getValue","callback","Promise","resolve","reject","err","createPromiseAll","promises","processResult","all","then","result","errors","AsyncStorage","removeItem","mergeItem","clear","getAllKeys","numberOfKeys","length","keys","i","push","flushGetRequests","undefined","multiGet","map","multiSet","keyValuePairs","item","multiRemove","multiMerge"],"sources":["C:\\Users\\chaud\\radha-counter\\node_modules\\@react-native-async-storage\\async-storage\\src\\AsyncStorage.ts"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport mergeOptions from \"merge-options\";\nimport type {\n  AsyncStorageStatic,\n  MultiCallback,\n  MultiGetCallback,\n} from \"./types\";\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype OnMultiResult = Function;\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype OnResult = Function;\n\nconst merge = mergeOptions.bind({\n  concatArrays: true,\n  ignoreUndefined: true,\n});\n\nfunction mergeLocalStorageItem(key: string, value: string) {\n  const oldValue = window.localStorage.getItem(key);\n  if (oldValue) {\n    const oldObject = JSON.parse(oldValue);\n    const newObject = JSON.parse(value);\n    const nextValue = JSON.stringify(merge(oldObject, newObject));\n    window.localStorage.setItem(key, nextValue);\n  } else {\n    window.localStorage.setItem(key, value);\n  }\n}\n\nfunction createPromise<Result, Callback extends OnResult>(\n  getValue: () => Result,\n  callback?: Callback\n): Promise<Result> {\n  return new Promise((resolve, reject) => {\n    try {\n      const value = getValue();\n      callback?.(null, value);\n      resolve(value);\n    } catch (err) {\n      callback?.(err);\n      reject(err);\n    }\n  });\n}\n\nfunction createPromiseAll<\n  ReturnType,\n  Result,\n  ResultProcessor extends OnMultiResult\n>(\n  promises: Promise<Result>[],\n  callback?: MultiCallback | MultiGetCallback,\n  processResult?: ResultProcessor\n): Promise<ReturnType> {\n  return Promise.all(promises).then(\n    (result) => {\n      const value = processResult?.(result) ?? null;\n      callback?.(null, value);\n      return Promise.resolve(value);\n    },\n    (errors) => {\n      callback?.(errors);\n      return Promise.reject(errors);\n    }\n  );\n}\n\nconst AsyncStorage: AsyncStorageStatic = {\n  /**\n   * Fetches `key` value.\n   */\n  getItem: (key, callback) => {\n    return createPromise(() => window.localStorage.getItem(key), callback);\n  },\n\n  /**\n   * Sets `value` for `key`.\n   */\n  setItem: (key, value, callback) => {\n    return createPromise(\n      () => window.localStorage.setItem(key, value),\n      callback\n    );\n  },\n\n  /**\n   * Removes a `key`\n   */\n  removeItem: (key, callback) => {\n    return createPromise(() => window.localStorage.removeItem(key), callback);\n  },\n\n  /**\n   * Merges existing value with input value, assuming they are stringified JSON.\n   */\n  mergeItem: (key, value, callback) => {\n    return createPromise(() => mergeLocalStorageItem(key, value), callback);\n  },\n\n  /**\n   * Erases *all* AsyncStorage for the domain.\n   */\n  clear: (callback) => {\n    return createPromise(() => window.localStorage.clear(), callback);\n  },\n\n  /**\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\n   */\n  getAllKeys: (callback) => {\n    return createPromise(() => {\n      const numberOfKeys = window.localStorage.length;\n      const keys: string[] = [];\n      for (let i = 0; i < numberOfKeys; i += 1) {\n        const key = window.localStorage.key(i) || \"\";\n        keys.push(key);\n      }\n      return keys;\n    }, callback);\n  },\n\n  /**\n   * (stub) Flushes any pending requests using a single batch call to get the data.\n   */\n  flushGetRequests: () => undefined,\n\n  /**\n   * multiGet resolves to an array of key-value pair arrays that matches the\n   * input format of multiSet.\n   *\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\n   */\n  multiGet: (keys, callback) => {\n    const promises = keys.map((key) => AsyncStorage.getItem(key));\n    const processResult = (result: string[]) =>\n      result.map((value, i) => [keys[i], value]);\n    return createPromiseAll(promises, callback, processResult);\n  },\n\n  /**\n   * Takes an array of key-value array pairs.\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\n   */\n  multiSet: (keyValuePairs, callback) => {\n    const promises = keyValuePairs.map((item) =>\n      AsyncStorage.setItem(item[0], item[1])\n    );\n    return createPromiseAll(promises, callback);\n  },\n\n  /**\n   * Delete all the keys in the `keys` array.\n   */\n  multiRemove: (keys, callback) => {\n    const promises = keys.map((key) => AsyncStorage.removeItem(key));\n    return createPromiseAll(promises, callback);\n  },\n\n  /**\n   * Takes an array of key-value array pairs and merges them with existing\n   * values, assuming they are stringified JSON.\n   *\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\n   */\n  multiMerge: (keyValuePairs, callback) => {\n    const promises = keyValuePairs.map((item) =>\n      AsyncStorage.mergeItem(item[0], item[1])\n    );\n    return createPromiseAll(promises, callback);\n  },\n};\n\nexport default AsyncStorage;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}