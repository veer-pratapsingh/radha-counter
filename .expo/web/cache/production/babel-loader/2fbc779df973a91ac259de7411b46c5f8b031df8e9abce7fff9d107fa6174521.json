{"ast":null,"code":"import isUndefined from'lodash/isUndefined';import isDate from'lodash/isDate';import isString from'lodash/isString';import isNumber from'lodash/isNumber';import XDate from'xdate';const{getLocale}=require('../dateutils');const{padNumber,toMarkingFormat}=require('../interface');export function getCalendarDateString(date){if(!isUndefined(date)){if(isDate(date)&&!isNaN(date.getFullYear())){return date.getFullYear()+'-'+padNumber(date.getMonth()+1)+'-'+padNumber(date.getDate());}else if(isString(date)){return toMarkingFormat(new XDate(date,false));}else if(isNumber(date)){return toMarkingFormat(new XDate(date,true));}throw'Invalid Date';}}export function getDefaultLocale(){return getLocale();}export default{getCalendarDateString,getDefaultLocale};","map":{"version":3,"names":["isUndefined","isDate","isString","isNumber","XDate","getLocale","require","padNumber","toMarkingFormat","getCalendarDateString","date","isNaN","getFullYear","getMonth","getDate","getDefaultLocale"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-calendars/src/services/index.js"],"sourcesContent":["import isUndefined from 'lodash/isUndefined';\nimport isDate from 'lodash/isDate';\nimport isString from 'lodash/isString';\nimport isNumber from 'lodash/isNumber';\nimport XDate from 'xdate';\nconst { getLocale } = require('../dateutils');\nconst { padNumber, toMarkingFormat } = require('../interface');\nexport function getCalendarDateString(date) {\n    if (!isUndefined(date)) {\n        if (isDate(date) && !isNaN(date.getFullYear())) {\n            return date.getFullYear() + '-' + padNumber(date.getMonth() + 1) + '-' + padNumber(date.getDate());\n        }\n        else if (isString(date)) {\n            // issue with strings and XDate's utc-mode - returns one day before\n            return toMarkingFormat(new XDate(date, false));\n        }\n        else if (isNumber(date)) {\n            return toMarkingFormat(new XDate(date, true));\n        }\n        throw 'Invalid Date';\n    }\n}\nexport function getDefaultLocale() {\n    return getLocale();\n}\nexport default {\n    getCalendarDateString,\n    getDefaultLocale\n};\n"],"mappings":"AAAA,MAAO,CAAAA,WAAW,KAAM,oBAAoB,CAC5C,MAAO,CAAAC,MAAM,KAAM,eAAe,CAClC,MAAO,CAAAC,QAAQ,KAAM,iBAAiB,CACtC,MAAO,CAAAC,QAAQ,KAAM,iBAAiB,CACtC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,KAAM,CAAEC,SAAU,CAAC,CAAGC,OAAO,CAAC,cAAc,CAAC,CAC7C,KAAM,CAAEC,SAAS,CAAEC,eAAgB,CAAC,CAAGF,OAAO,CAAC,cAAc,CAAC,CAC9D,MAAO,SAAS,CAAAG,qBAAqBA,CAACC,IAAI,CAAE,CACxC,GAAI,CAACV,WAAW,CAACU,IAAI,CAAC,CAAE,CACpB,GAAIT,MAAM,CAACS,IAAI,CAAC,EAAI,CAACC,KAAK,CAACD,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC,CAAE,CAC5C,MAAO,CAAAF,IAAI,CAACE,WAAW,CAAC,CAAC,CAAG,GAAG,CAAGL,SAAS,CAACG,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAC,CAAG,GAAG,CAAGN,SAAS,CAACG,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CACtG,CAAC,IACI,IAAIZ,QAAQ,CAACQ,IAAI,CAAC,CAAE,CAErB,MAAO,CAAAF,eAAe,CAAC,GAAI,CAAAJ,KAAK,CAACM,IAAI,CAAE,KAAK,CAAC,CAAC,CAClD,CAAC,IACI,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAE,CACrB,MAAO,CAAAF,eAAe,CAAC,GAAI,CAAAJ,KAAK,CAACM,IAAI,CAAE,IAAI,CAAC,CAAC,CACjD,CACA,KAAM,cAAc,CACxB,CACJ,CACA,MAAO,SAAS,CAAAK,gBAAgBA,CAAA,CAAG,CAC/B,MAAO,CAAAV,SAAS,CAAC,CAAC,CACtB,CACA,cAAe,CACXI,qBAAqB,CACrBM,gBACJ,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}