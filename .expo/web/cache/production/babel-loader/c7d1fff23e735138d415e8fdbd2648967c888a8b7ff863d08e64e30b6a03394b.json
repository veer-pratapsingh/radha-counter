{"ast":null,"code":"\"use strict\";import React,{Component}from\"react\";import View from\"react-native-web/dist/exports/View\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import{jsx as _jsx}from\"react/jsx-runtime\";export const swipeDirections={SWIPE_UP:\"SWIPE_UP\",SWIPE_DOWN:\"SWIPE_DOWN\",SWIPE_LEFT:\"SWIPE_LEFT\",SWIPE_RIGHT:\"SWIPE_RIGHT\"};const swipeConfig={velocityThreshold:0.3,directionalOffsetThreshold:80,gestureIsClickThreshold:5};function isValidSwipe(velocity,velocityThreshold,directionalOffset,directionalOffsetThreshold){return Math.abs(velocity)>velocityThreshold&&Math.abs(directionalOffset)<directionalOffsetThreshold;}class GestureRecognizer extends Component{constructor(props,context){super(props,context);this.swipeConfig=Object.assign(swipeConfig,props.config);const responderEnd=this._handlePanResponderEnd.bind(this);const shouldSetResponder=this._handleShouldSetPanResponder.bind(this);this._panResponder=PanResponder.create({onStartShouldSetPanResponder:shouldSetResponder,onMoveShouldSetPanResponder:shouldSetResponder,onPanResponderRelease:responderEnd,onPanResponderTerminate:responderEnd});}componentDidUpdate(prevProps){if(this.props.config!==prevProps.config){this.swipeConfig=Object.assign(swipeConfig,this.props.config);}}_handleShouldSetPanResponder(evt,gestureState){return evt.nativeEvent.touches.length===1&&!this._gestureIsClick(gestureState);}_gestureIsClick(gestureState){return Math.abs(gestureState.dx)<swipeConfig.gestureIsClickThreshold&&Math.abs(gestureState.dy)<swipeConfig.gestureIsClickThreshold;}_handlePanResponderEnd(evt,gestureState){const swipeDirection=this._getSwipeDirection(gestureState);this._triggerSwipeHandlers(swipeDirection,gestureState);}_triggerSwipeHandlers(swipeDirection,gestureState){const{onSwipe,onSwipeUp,onSwipeDown,onSwipeLeft,onSwipeRight}=this.props;const{SWIPE_LEFT,SWIPE_RIGHT,SWIPE_UP,SWIPE_DOWN}=swipeDirections;onSwipe&&onSwipe(swipeDirection,gestureState);switch(swipeDirection){case SWIPE_LEFT:onSwipeLeft&&onSwipeLeft(gestureState);break;case SWIPE_RIGHT:onSwipeRight&&onSwipeRight(gestureState);break;case SWIPE_UP:onSwipeUp&&onSwipeUp(gestureState);break;case SWIPE_DOWN:onSwipeDown&&onSwipeDown(gestureState);break;}}_getSwipeDirection(gestureState){const{SWIPE_LEFT,SWIPE_RIGHT,SWIPE_UP,SWIPE_DOWN}=swipeDirections;const{dx,dy}=gestureState;if(this._isValidHorizontalSwipe(gestureState)){return dx>0?SWIPE_RIGHT:SWIPE_LEFT;}else if(this._isValidVerticalSwipe(gestureState)){return dy>0?SWIPE_DOWN:SWIPE_UP;}return null;}_isValidHorizontalSwipe(gestureState){const{vx,dy}=gestureState;const{velocityThreshold,directionalOffsetThreshold}=this.swipeConfig;return isValidSwipe(vx,velocityThreshold,dy,directionalOffsetThreshold);}_isValidVerticalSwipe(gestureState){const{vy,dx}=gestureState;const{velocityThreshold,directionalOffsetThreshold}=this.swipeConfig;return isValidSwipe(vy,velocityThreshold,dx,directionalOffsetThreshold);}render(){return _jsx(View,Object.assign({},this.props,this._panResponder.panHandlers));}}export default GestureRecognizer;","map":{"version":3,"names":["React","Component","View","PanResponder","jsx","_jsx","swipeDirections","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","swipeConfig","velocityThreshold","directionalOffsetThreshold","gestureIsClickThreshold","isValidSwipe","velocity","directionalOffset","Math","abs","GestureRecognizer","constructor","props","context","Object","assign","config","responderEnd","_handlePanResponderEnd","bind","shouldSetResponder","_handleShouldSetPanResponder","_panResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderRelease","onPanResponderTerminate","componentDidUpdate","prevProps","evt","gestureState","nativeEvent","touches","length","_gestureIsClick","dx","dy","swipeDirection","_getSwipeDirection","_triggerSwipeHandlers","onSwipe","onSwipeUp","onSwipeDown","onSwipeLeft","onSwipeRight","_isValidHorizontalSwipe","_isValidVerticalSwipe","vx","vy","render","panHandlers"],"sources":["C:/Users/chaud/radha-counter/node_modules/react-native-swipe-gestures/index.js"],"sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport { View, PanResponder } from \"react-native\";\n\nexport const swipeDirections = {\n  SWIPE_UP: \"SWIPE_UP\",\n  SWIPE_DOWN: \"SWIPE_DOWN\",\n  SWIPE_LEFT: \"SWIPE_LEFT\",\n  SWIPE_RIGHT: \"SWIPE_RIGHT\"\n};\n\nconst swipeConfig = {\n  velocityThreshold: 0.3,\n  directionalOffsetThreshold: 80,\n  gestureIsClickThreshold: 5\n};\n\nfunction isValidSwipe(\n  velocity,\n  velocityThreshold,\n  directionalOffset,\n  directionalOffsetThreshold\n) {\n  return (\n    Math.abs(velocity) > velocityThreshold &&\n    Math.abs(directionalOffset) < directionalOffsetThreshold\n  );\n}\n\nclass GestureRecognizer extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.swipeConfig = Object.assign(swipeConfig, props.config);\n\n    const responderEnd = this._handlePanResponderEnd.bind(this);\n    const shouldSetResponder = this._handleShouldSetPanResponder.bind(this);\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: shouldSetResponder,\n      onMoveShouldSetPanResponder: shouldSetResponder,\n      onPanResponderRelease: responderEnd,\n      onPanResponderTerminate: responderEnd\n    });\n  }\n  \n  componentDidUpdate(prevProps) {\n    if (this.props.config !== prevProps.config) {\n      this.swipeConfig = Object.assign(swipeConfig, this.props.config);\n    }\n  }\n  \n  _handleShouldSetPanResponder(evt, gestureState) {\n    return (\n      evt.nativeEvent.touches.length === 1 &&\n      !this._gestureIsClick(gestureState)\n    );\n  }\n\n  _gestureIsClick(gestureState) {\n    return (\n      Math.abs(gestureState.dx) < swipeConfig.gestureIsClickThreshold &&\n      Math.abs(gestureState.dy) < swipeConfig.gestureIsClickThreshold\n    );\n  }\n\n  _handlePanResponderEnd(evt, gestureState) {\n    const swipeDirection = this._getSwipeDirection(gestureState);\n    this._triggerSwipeHandlers(swipeDirection, gestureState);\n  }\n\n  _triggerSwipeHandlers(swipeDirection, gestureState) {\n    const {\n      onSwipe,\n      onSwipeUp,\n      onSwipeDown,\n      onSwipeLeft,\n      onSwipeRight\n    } = this.props;\n    const { SWIPE_LEFT, SWIPE_RIGHT, SWIPE_UP, SWIPE_DOWN } = swipeDirections;\n    onSwipe && onSwipe(swipeDirection, gestureState);\n    switch (swipeDirection) {\n      case SWIPE_LEFT:\n        onSwipeLeft && onSwipeLeft(gestureState);\n        break;\n      case SWIPE_RIGHT:\n        onSwipeRight && onSwipeRight(gestureState);\n        break;\n      case SWIPE_UP:\n        onSwipeUp && onSwipeUp(gestureState);\n        break;\n      case SWIPE_DOWN:\n        onSwipeDown && onSwipeDown(gestureState);\n        break;\n    }\n  }\n\n  _getSwipeDirection(gestureState) {\n    const { SWIPE_LEFT, SWIPE_RIGHT, SWIPE_UP, SWIPE_DOWN } = swipeDirections;\n    const { dx, dy } = gestureState;\n    if (this._isValidHorizontalSwipe(gestureState)) {\n      return dx > 0 ? SWIPE_RIGHT : SWIPE_LEFT;\n    } else if (this._isValidVerticalSwipe(gestureState)) {\n      return dy > 0 ? SWIPE_DOWN : SWIPE_UP;\n    }\n    return null;\n  }\n\n  _isValidHorizontalSwipe(gestureState) {\n    const { vx, dy } = gestureState;\n    const { velocityThreshold, directionalOffsetThreshold } = this.swipeConfig;\n    return isValidSwipe(vx, velocityThreshold, dy, directionalOffsetThreshold);\n  }\n\n  _isValidVerticalSwipe(gestureState) {\n    const { vy, dx } = gestureState;\n    const { velocityThreshold, directionalOffsetThreshold } = this.swipeConfig;\n    return isValidSwipe(vy, velocityThreshold, dx, directionalOffsetThreshold);\n  }\n\n  render() {\n    return <View {...this.props} {...this._panResponder.panHandlers} />;\n  }\n}\n\nexport default GestureRecognizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}